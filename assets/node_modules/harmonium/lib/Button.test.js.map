{"version":3,"sources":["../src/Button.test.js"],"names":["describe","it","inherentClassName","testClassName","childClassName","first","prop","expect","to","contain","button","htmlButton","find","equal"],"mappings":";;AAAA;;;;AACA;;AACA;;;;;;AAEAA,SAAS,QAAT,EAAmB,YAAM;AACvBC,KAAG,gCAAH,EAAqC,YAAM;AACzC,yBAAQ,8BAAC,gBAAD,OAAR;AACD,GAFD;;AAIAA,KAAG,+BAAH,EAAoC,YAAM;AACxC,QAAMC,oBAAoB,YAA1B;AACA,QAAMC,gBAAgB,UAAtB;;AAEA,QAAMC,iBAAiB,qBAAQ,8BAAC,gBAAD,IAAQ,WAAWD,aAAnB,GAAR,EACpBE,KADoB,GAEpBC,IAFoB,CAEf,WAFe,CAAvB;;AAIAC,WAAOH,cAAP,EAAuBI,EAAvB,CAA0BC,OAA1B,CAAkCP,iBAAlC;AACAK,WAAOH,cAAP,EAAuBI,EAAvB,CAA0BC,OAA1B,CAAkCN,aAAlC;AACD,GAVD;;AAYAF,KAAG,gDAAH,EAAqD,YAAM;AACzD,QAAMS,SAAS,qBAAQ,8BAAC,gBAAD,IAAQ,eAAR,GAAR,CAAf;;AAEAH,WAAOG,OAAOL,KAAP,GAAeC,IAAf,CAAoB,WAApB,CAAP,EAAyCE,EAAzC,CAA4CC,OAA5C,CAAoD,WAApD;AACD,GAJD;;AAMAR,KAAG,mCAAH,EAAwC,YAAM;AAC5C,QAAMU,aAAa,mBAAM,8BAAC,gBAAD,IAAQ,cAAR,GAAN,EAChBC,IADgB,CACX,QADW,EAEhBP,KAFgB,EAAnB;;AAIAE,WAAOI,WAAWL,IAAX,CAAgB,WAAhB,CAAP,EAAqCE,EAArC,CAAwCC,OAAxC,CAAgD,UAAhD;AACAF,WAAOI,WAAWL,IAAX,CAAgB,UAAhB,CAAP,EAAoCE,EAApC,CAAuCK,KAAvC,CAA6C,IAA7C;AACD,GAPD;AAQD,CA/BD","file":"Button.test.js","sourcesContent":["import React from 'react'\nimport {shallow, mount} from 'enzyme'\nimport Button from './Button'\n\ndescribe('Button', () => {\n  it('should render without throwing', () => {\n    shallow(<Button />)\n  })\n\n  it('should add className to child', () => {\n    const inherentClassName = 'rev-Button'\n    const testClassName = '__TEST__'\n\n    const childClassName = shallow(<Button className={testClassName} />)\n      .first()\n      .prop('className')\n\n    expect(childClassName).to.contain(inherentClassName)\n    expect(childClassName).to.contain(testClassName)\n  })\n\n  it('should handle props for different button types', () => {\n    const button = shallow(<Button secondary />)\n\n    expect(button.first().prop('className')).to.contain('secondary')\n  })\n\n  it('should correctly disable a button', () => {\n    const htmlButton = mount(<Button disabled />)\n      .find('button')\n      .first()\n\n    expect(htmlButton.prop('className')).to.contain('disabled')\n    expect(htmlButton.prop('disabled')).to.equal(true)\n  })\n})\n"]}