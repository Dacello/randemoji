{"version":3,"sources":["../src/Slider.js"],"names":["Slider","props","sliderChange","e","setState","value","target","inputChange","min","max","state","initialValue","name","rangeInputProps","Component","propTypes","PropTypes","number","step","string"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;;;IAEMA,M;;;AACJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA,gHACXA,KADW;;AAAA,UAQnBC,YARmB,GAQJ,UAACC,CAAD,EAAO;AACpB,YAAKC,QAAL,CAAc,EAACC,OAAOF,EAAEG,MAAF,CAASD,KAAjB,EAAd;AACD,KAVkB;;AAAA,UAYnBE,WAZmB,GAYL,UAACJ,CAAD,EAAO;AAAA,wBACA,MAAKF,KADL;AAAA,UACZO,GADY,eACZA,GADY;AAAA,UACPC,GADO,eACPA,GADO;AAAA,UAEZJ,KAFY,GAEHF,EAAEG,MAFC,CAEZD,KAFY;;;AAInB,UAAIA,QAAQI,GAAZ,EAAiB;AACf,cAAKL,QAAL,CAAc,EAACC,OAAOI,GAAR,EAAd;AACD,OAFD,MAEO,IAAIJ,QAAQG,GAAZ,EAAiB;AACtB,cAAKJ,QAAL,CAAc,EAACC,OAAOG,GAAR,EAAd;AACD,OAFM,MAEA;AACL,cAAKJ,QAAL,CAAc,EAACC,YAAD,EAAd;AACD;AACF,KAvBkB;;AAGjB,UAAKK,KAAL,GAAa;AACXL,aAAOJ,MAAMU;AADF,KAAb;AAHiB;AAMlB;;;;6BAmBQ;AAAA,mBAC4B,KAAKV,KADjC;AAAA,UACAW,IADA,UACAA,IADA;AAAA,UACSC,eADT;;AAAA,UAEAR,KAFA,GAES,KAAKK,KAFd,CAEAL,KAFA;;;AAIP,aACE;AAAA;AAAA,UAAK,WAAU,YAAf;AACE;AAAA;AAAA,YAAK,WAAU,4BAAf;AACE;AACE,uBAAU;AADZ,aAEMQ,eAFN;AAGE,kBAAK,OAHP;AAIE,sBAAU,KAAKX,YAJjB;AAKE,mBAAOG;AALT;AADF,SADF;AAUE;AACE,gBAAK,MADP;AAEE,qBAAU,kBAFZ;AAGE,oBAAU,KAAKE,WAHjB;AAIE,gBAAMK,IAJR;AAKE,iBAAOP;AALT;AAVF,OADF;AAoBD;;;;EAlDkBS,gB;;AAqDrBd,OAAOe,SAAP,GAAmB;AACjBP,OAAKQ,oBAAUC,MADE;AAEjBR,OAAKO,oBAAUC,MAFE;AAGjBC,QAAMF,oBAAUC,MAHC;AAIjBN,gBAAcK,oBAAUC,MAJP;AAKjBL,QAAMI,oBAAUG;AALC,CAAnB;;kBAQenB,M","file":"Slider.js","sourcesContent":["import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\n\nclass Slider extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      value: props.initialValue,\n    }\n  }\n\n  sliderChange = (e) => {\n    this.setState({value: e.target.value})\n  }\n\n  inputChange = (e) => {\n    const {min, max} = this.props\n    const {value} = e.target\n\n    if (value > max) {\n      this.setState({value: max})\n    } else if (value < min) {\n      this.setState({value: min})\n    } else {\n      this.setState({value})\n    }\n  }\n\n  render() {\n    const {name, ...rangeInputProps} = this.props\n    const {value} = this.state\n\n    return (\n      <div className=\"rev-Slider\">\n        <div className=\"rev-Slider-range-container\">\n          <input\n            className=\"rev-Slider-range\"\n            {...rangeInputProps}\n            type=\"range\"\n            onChange={this.sliderChange}\n            value={value}\n          />\n        </div>\n        <input\n          type=\"text\"\n          className=\"rev-Slider-input\"\n          onChange={this.inputChange}\n          name={name}\n          value={value}\n        />\n      </div>\n    )\n  }\n}\n\nSlider.propTypes = {\n  min: PropTypes.number,\n  max: PropTypes.number,\n  step: PropTypes.number,\n  initialValue: PropTypes.number,\n  name: PropTypes.string,\n}\n\nexport default Slider\n"]}