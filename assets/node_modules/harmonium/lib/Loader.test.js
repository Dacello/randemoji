'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _enzyme = require('enzyme');

var _Loader = require('./Loader');

var _Loader2 = _interopRequireDefault(_Loader);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var props = {};

describe('Loader', function () {
  it('will shallow render without throwing', function () {
    expect(function () {
      return (0, _enzyme.shallow)(_react2.default.createElement(_Loader2.default, props));
    }).not.to.throw();
  });

  it('will render without throwing', function () {
    expect(function () {
      return (0, _enzyme.mount)(_react2.default.createElement(_Loader2.default, props));
    }).not.to.throw();
  });

  it('renders a small variation if prop "small" is specified as true', function () {
    var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Loader2.default, { small: true }));

    expect(wrapper.hasClass('rev-Loader--small')).to.equal(true);
  });

  it('renders a medium variation if prop "medium" is specified as true', function () {
    var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Loader2.default, { medium: true }));

    expect(wrapper.hasClass('rev-Loader--medium')).to.equal(true);
  });

  it('renders a large variation if prop "large" is specified as true', function () {
    var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Loader2.default, { large: true }));

    expect(wrapper.hasClass('rev-Loader--large')).to.equal(true);
  });

  it('renders a huge variation if prop "huge" is specified as true', function () {
    var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Loader2.default, { huge: true }));

    expect(wrapper.hasClass('rev-Loader--huge')).to.equal(true);
  });

  it('assigns a variation on animation-duration when prop "duration" is specified', function () {
    var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Loader2.default, { duration: '600ms' }));

    expect(wrapper.props().style.animationDuration).to.equal('600ms');
  });

  it('assigns a variation on border-top-color when prop "color" is specified', function () {
    var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Loader2.default, { color: '#000000' }));

    expect(wrapper.props().style.borderTopColor).to.equal('#000000');
  });

  it('assigns a variation on border-color when prop "secondaryColor" is specified', function () {
    var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Loader2.default, { secondaryColor: '#FFFFFF' }));

    expect(wrapper.props().style.borderColor).to.equal('#FFFFFF');
  });

  it('throws an error if more than one size-related prop is specified', function () {
    // Construct props wherein more than one size attribute is specified.
    var customProps = _extends({}, props, { small: true, medium: true });

    expect(function () {
      return (0, _enzyme.shallow)(_react2.default.createElement(_Loader2.default, customProps));
    }).to.throw();
  });
});
//# sourceMappingURL=Loader.test.js.map