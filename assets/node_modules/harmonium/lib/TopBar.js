'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BOOL_PROPS_TO_CLASS_NAMES = {
  fixed: 'rev-TopBar--fixed',
  center: 'rev-TopBar--center',
  left: 'rev-TopBar--left',
  justified: 'rev-TopBar--justified',
  right: 'rev-TopBar--right',
  breakpointMedium: 'rev-TopBar-breakpoint--mediumDown',
  breakpointLarge: 'rev-TopBar-breakpoint--largeDown',
  breakpointXlarge: 'rev-TopBar-breakpoint--xlargeDown',
  breakpointXxlarge: 'rev-TopBar-breakpoint--xxlargeDown'
};
var BOOL_PROPS = Object.keys(BOOL_PROPS_TO_CLASS_NAMES);

var TopBar = function (_Component) {
  _inherits(TopBar, _Component);

  function TopBar() {
    _classCallCheck(this, TopBar);

    return _possibleConstructorReturn(this, (TopBar.__proto__ || Object.getPrototypeOf(TopBar)).apply(this, arguments));
  }

  _createClass(TopBar, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          className = _props.className,
          children = _props.children,
          props = _objectWithoutProperties(_props, ['className', 'children']);

      var propClassNames = [];

      BOOL_PROPS.forEach(function (name) {
        if (props[name]) {
          propClassNames.push(BOOL_PROPS_TO_CLASS_NAMES[name]);
        }
        delete props[name];
      });
      var newClassName = (0, _classnames2.default)(className, 'rev-TopBar', propClassNames);

      return _react2.default.createElement(
        'div',
        _extends({}, props, { className: newClassName }),
        _react2.default.createElement(
          'nav',
          null,
          children
        )
      );
    }
  }]);

  return TopBar;
}(_react.Component);

TopBar.propTypes = {
  className: _propTypes2.default.string,
  children: _propTypes2.default.node
};
exports.default = TopBar;

var TopBarItem = function (_Component2) {
  _inherits(TopBarItem, _Component2);

  function TopBarItem() {
    _classCallCheck(this, TopBarItem);

    return _possibleConstructorReturn(this, (TopBarItem.__proto__ || Object.getPrototypeOf(TopBarItem)).apply(this, arguments));
  }

  _createClass(TopBarItem, [{
    key: 'render',
    value: function render() {
      var _props2 = this.props,
          className = _props2.className,
          children = _props2.children,
          scroll = _props2.scroll,
          scrollSmall = _props2.scrollSmall,
          scrollMedium = _props2.scrollMedium,
          scrollLarge = _props2.scrollLarge,
          scrollXlarge = _props2.scrollXlarge,
          scrollMediumDown = _props2.scrollMediumDown,
          scrollLargeDown = _props2.scrollLargeDown,
          scrollXlargeDown = _props2.scrollXlargeDown,
          scrollNav = _props2.scrollNav,
          scrollNavOnly = _props2.scrollNavOnly,
          props = _objectWithoutProperties(_props2, ['className', 'children', 'scroll', 'scrollSmall', 'scrollMedium', 'scrollLarge', 'scrollXlarge', 'scrollMediumDown', 'scrollLargeDown', 'scrollXlargeDown', 'scrollNav', 'scrollNavOnly']);

      var newClassName = (0, _classnames2.default)('rev-TopBar-item ' + (className || ''), {
        'rev-TopBar-item--scroll': scroll,
        'rev-TopBar-item--scroll--smallOnly': scrollSmall,
        'rev-TopBar-item--scroll--medium': scrollMedium,
        'rev-TopBar-item--scroll--large': scrollLarge,
        'rev-TopBar-item--scroll--xLarge': scrollXlarge,
        'rev-TopBar-item--scroll--mediumDown': scrollMediumDown,
        'rev-TopBar-item--scroll--largeDown': scrollLargeDown,
        'rev-TopBar-item--scroll--xLargeDown': scrollXlargeDown,
        'rev-TopBar-item--scroll--nav': scrollNav,
        'rev-TopBar-item--scroll--navOnly': scrollNavOnly
      });

      return _react2.default.createElement(
        'div',
        _extends({}, props, { className: newClassName }),
        children
      );
    }
  }]);

  return TopBarItem;
}(_react.Component);

TopBarItem.propTypes = {
  className: _propTypes2.default.string,
  children: _propTypes2.default.node,
  scroll: _propTypes2.default.bool,
  scrollSmall: _propTypes2.default.bool,
  scrollMeidum: _propTypes2.default.bool,
  scrollLarge: _propTypes2.default.bool,
  scrollXlarge: _propTypes2.default.bool,
  scrollMediumDown: _propTypes2.default.bool,
  scrollLargeDown: _propTypes2.default.bool,
  scrollXlargeDown: _propTypes2.default.bool,
  scrollNav: _propTypes2.default.bool,
  scrollNavOnly: _propTypes2.default.bool
};

TopBar.Item = TopBarItem;
//# sourceMappingURL=TopBar.js.map