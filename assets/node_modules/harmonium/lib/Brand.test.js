'use strict';

var _Brand = require('./Brand');

var _Brand2 = _interopRequireDefault(_Brand);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _enzyme = require('enzyme');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var props = {};

describe('Brand', function () {
  it('should render without throwing', function () {
    expect(function () {
      return (0, _enzyme.shallow)(_react2.default.createElement(_Brand2.default, props));
    }).not.to.throw();
  });

  it('should set the "src" attribute on the image element', function () {
    var path = 'path/to/image';
    var brand = (0, _enzyme.shallow)(_react2.default.createElement(_Brand2.default, { imagePath: path }));

    expect(brand.find('img').getElement().props.src).to.equal(path);
  });

  it('should set the "alt" tag on the image element', function () {
    var altText = 'screen reader text';
    var brand = (0, _enzyme.shallow)(_react2.default.createElement(_Brand2.default, { altTag: altText }));

    expect(brand.find('img').getElement().props.alt).to.equal(altText);
  });

  it('should set the link on the anchor element', function () {
    var link = '/some/example/link';
    var brand = (0, _enzyme.shallow)(_react2.default.createElement(_Brand2.default, { linkPath: link }));

    expect(brand.find('a').getElement().props.href).to.equal(link);
  });
});
//# sourceMappingURL=Brand.test.js.map