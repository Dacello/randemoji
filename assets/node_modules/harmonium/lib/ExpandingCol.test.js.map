{"version":3,"sources":["../src/ExpandingCol.test.js"],"names":["describe","it","classes","first","prop","expect","to","contain","container","expander","find","simulate","state","eq"],"mappings":";;AAAA;;AACA;;;;AACA;;AACA;;;;AAEAA,SAAS,cAAT,EAAyB,YAAM;AAC7BC,KAAG,qCAAH,EAA0C,YAAM;AAC9C,QAAMC,UAAU,qBAAQ;AAAC,gCAAD;AAAA;AAAA;AAAA,KAAR,EACbC,KADa,GAEbC,IAFa,CAER,WAFQ,CAAhB;;AAIAC,WAAOH,OAAP,EAAgBI,EAAhB,CAAmBC,OAAnB,CAA2B,WAA3B;AACD,GAND;;AAQAN,KAAG,iCAAH,EAAsC,YAAM;AAC1C,QAAMC,UAAU,qBAAQ;AAAC,gCAAD;AAAA,QAAc,UAAd;AAAA;AAAA,KAAR,EACbC,KADa,GAEbC,IAFa,CAER,WAFQ,CAAhB;;AAIAC,WAAOH,OAAP,EAAgBI,EAAhB,CAAmBC,OAAnB,CAA2B,SAA3B;AACD,GAND;AAOD,CAhBD;;AAkBAP,SAAS,4BAAT,EAAuC,YAAM;AAC3CC,KAAG,gCAAH,EAAqC,YAAM;AACzC,yBAAQ;AAAC,8CAAD;AAAA;AAAA;AAAA,KAAR;AACD,GAFD;;AAIAA,KAAG,kCAAH,EAAuC,YAAM;AAC3C,QAAMO,YAAY,mBAChB;AAAC,8CAAD;AAAA;AAAA;AAAA,KADgB,CAAlB;AAGA,QAAMC,WAAWD,UAAUE,IAAV,CAAe,4BAAf,EAA6CP,KAA7C,EAAjB;;AAEAM,aAASE,QAAT,CAAkB,OAAlB;;AAEAN,WAAOG,UAAUI,KAAV,CAAgB,MAAhB,CAAP,EAAgCN,EAAhC,CAAmCO,EAAnC,CAAsC,IAAtC;;AAEAJ,aAASE,QAAT,CAAkB,OAAlB;;AAEAN,WAAOG,UAAUI,KAAV,CAAgB,MAAhB,CAAP,EAAgCN,EAAhC,CAAmCO,EAAnC,CAAsC,KAAtC;AACD,GAbD;AAcD,CAnBD","file":"ExpandingCol.test.js","sourcesContent":["import 'jsdom-global/register'\nimport React from 'react'\nimport {shallow, mount} from 'enzyme'\nimport {ExpandingCol, ExpandingColStateContainer} from './ExpandingCol'\n\ndescribe('ExpandingCol', () => {\n  it('should render closed with is-closed', () => {\n    const classes = shallow(<ExpandingCol>Test</ExpandingCol>)\n      .first()\n      .prop('className')\n\n    expect(classes).to.contain('is-closed')\n  })\n\n  it('should render open with is-open', () => {\n    const classes = shallow(<ExpandingCol open>Test</ExpandingCol>)\n      .first()\n      .prop('className')\n\n    expect(classes).to.contain('is-open')\n  })\n})\n\ndescribe('ExpandingColStateContainer', () => {\n  it('should render without throwing', () => {\n    shallow(<ExpandingColStateContainer>Test</ExpandingColStateContainer>)\n  })\n\n  it('should be openable and closeable', () => {\n    const container = mount(\n      <ExpandingColStateContainer>Test</ExpandingColStateContainer>\n    )\n    const expander = container.find('.rev-ExpandingCol-expander').first()\n\n    expander.simulate('click')\n\n    expect(container.state('open')).to.eq(true)\n\n    expander.simulate('click')\n\n    expect(container.state('open')).to.eq(false)\n  })\n})\n"]}