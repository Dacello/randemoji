'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BOOL_PROPS_TO_CLASS_NAMES = {
  striped: 'rev-Table--striped',
  horizontalScroll: 'rev-Table--horizontalScroll',
  stacked: 'rev-Table--stacked',
  stackForSmall: 'rev-Table--stackForSmall',
  stackForMedium: 'rev-Table--stackForMedium',
  stackForLarge: 'rev-Table--stackForLarge'
};
var BOOL_PROPS = Object.keys(BOOL_PROPS_TO_CLASS_NAMES);

var Table = function (_React$Component) {
  _inherits(Table, _React$Component);

  function Table() {
    _classCallCheck(this, Table);

    return _possibleConstructorReturn(this, (Table.__proto__ || Object.getPrototypeOf(Table)).apply(this, arguments));
  }

  _createClass(Table, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          className = _props.className,
          children = _props.children,
          props = _objectWithoutProperties(_props, ['className', 'children']);

      var propClassNames = [];

      BOOL_PROPS.forEach(function (name) {
        if (props[name]) {
          propClassNames.push(BOOL_PROPS_TO_CLASS_NAMES[name]);
        }
        delete props[name];
      });

      var newClassName = (0, _classnames2.default)(className, 'rev-Table', propClassNames);

      return _react2.default.createElement(
        'div',
        { className: 'rev-TableContainer' },
        _react2.default.createElement(
          'table',
          _extends({}, props, { className: newClassName }),
          children
        )
      );
    }
  }]);

  return Table;
}(_react2.default.Component);

Table.propTypes = {
  className: _propTypes2.default.string,
  children: _propTypes2.default.node
};
exports.default = Table;

var TableHead = function (_Component) {
  _inherits(TableHead, _Component);

  function TableHead() {
    _classCallCheck(this, TableHead);

    return _possibleConstructorReturn(this, (TableHead.__proto__ || Object.getPrototypeOf(TableHead)).apply(this, arguments));
  }

  _createClass(TableHead, [{
    key: 'render',
    value: function render() {
      var _props2 = this.props,
          className = _props2.className,
          children = _props2.children,
          props = _objectWithoutProperties(_props2, ['className', 'children']);

      return _react2.default.createElement(
        'thead',
        _extends({}, props, { className: 'rev-Table-head ' + className }),
        children
      );
    }
  }]);

  return TableHead;
}(_react.Component);

TableHead.propTypes = {
  className: _propTypes2.default.string,
  children: _propTypes2.default.node
};

Table.Head = TableHead;

var TableHeadStacked = function (_Component2) {
  _inherits(TableHeadStacked, _Component2);

  function TableHeadStacked() {
    _classCallCheck(this, TableHeadStacked);

    return _possibleConstructorReturn(this, (TableHeadStacked.__proto__ || Object.getPrototypeOf(TableHeadStacked)).apply(this, arguments));
  }

  _createClass(TableHeadStacked, [{
    key: 'render',
    value: function render() {
      var _props3 = this.props,
          className = _props3.className,
          children = _props3.children,
          props = _objectWithoutProperties(_props3, ['className', 'children']);

      return _react2.default.createElement(
        'thead',
        _extends({}, props, { className: 'rev-Table-head rev-Table-head--stacked ' + className }),
        children
      );
    }
  }]);

  return TableHeadStacked;
}(_react.Component);

TableHeadStacked.propTypes = {
  className: _propTypes2.default.string,
  children: _propTypes2.default.node
};

Table.HeadStacked = TableHeadStacked;

var TableHeader = function (_Component3) {
  _inherits(TableHeader, _Component3);

  function TableHeader() {
    _classCallCheck(this, TableHeader);

    return _possibleConstructorReturn(this, (TableHeader.__proto__ || Object.getPrototypeOf(TableHeader)).apply(this, arguments));
  }

  _createClass(TableHeader, [{
    key: 'render',
    value: function render() {
      var _props4 = this.props,
          className = _props4.className,
          children = _props4.children,
          props = _objectWithoutProperties(_props4, ['className', 'children']);

      return _react2.default.createElement(
        'th',
        _extends({}, props, { className: 'rev-Table-header ' + className }),
        children
      );
    }
  }]);

  return TableHeader;
}(_react.Component);

TableHeader.propTypes = {
  className: _propTypes2.default.string,
  children: _propTypes2.default.node
};

Table.Header = TableHeader;

var TableHeaderInline = function (_Component4) {
  _inherits(TableHeaderInline, _Component4);

  function TableHeaderInline() {
    _classCallCheck(this, TableHeaderInline);

    return _possibleConstructorReturn(this, (TableHeaderInline.__proto__ || Object.getPrototypeOf(TableHeaderInline)).apply(this, arguments));
  }

  _createClass(TableHeaderInline, [{
    key: 'render',
    value: function render() {
      var _props5 = this.props,
          className = _props5.className,
          children = _props5.children,
          props = _objectWithoutProperties(_props5, ['className', 'children']);

      return _react2.default.createElement(
        'span',
        _extends({}, props, { className: 'rev-Table-header rev-Table-header--inline ' + className }),
        children
      );
    }
  }]);

  return TableHeaderInline;
}(_react.Component);

TableHeaderInline.propTypes = {
  className: _propTypes2.default.string,
  children: _propTypes2.default.node
};

Table.HeaderInline = TableHeaderInline;

var TableBody = function (_Component5) {
  _inherits(TableBody, _Component5);

  function TableBody() {
    _classCallCheck(this, TableBody);

    return _possibleConstructorReturn(this, (TableBody.__proto__ || Object.getPrototypeOf(TableBody)).apply(this, arguments));
  }

  _createClass(TableBody, [{
    key: 'render',
    value: function render() {
      var _props6 = this.props,
          className = _props6.className,
          children = _props6.children;


      return _react2.default.createElement(
        'tbody',
        { className: 'rev-Table-body ' + className },
        children
      );
    }
  }]);

  return TableBody;
}(_react.Component);

TableBody.propTypes = {
  className: _propTypes2.default.string,
  children: _propTypes2.default.node
};

Table.Body = TableBody;

var TableRow = function (_Component6) {
  _inherits(TableRow, _Component6);

  function TableRow() {
    _classCallCheck(this, TableRow);

    return _possibleConstructorReturn(this, (TableRow.__proto__ || Object.getPrototypeOf(TableRow)).apply(this, arguments));
  }

  _createClass(TableRow, [{
    key: 'render',
    value: function render() {
      var _props7 = this.props,
          className = _props7.className,
          children = _props7.children;


      return _react2.default.createElement(
        'tr',
        { className: 'rev-Table-row ' + className },
        children
      );
    }
  }]);

  return TableRow;
}(_react.Component);

TableRow.propTypes = {
  className: _propTypes2.default.string,
  children: _propTypes2.default.node
};

Table.Row = TableRow;

var TableData = function (_Component7) {
  _inherits(TableData, _Component7);

  function TableData() {
    _classCallCheck(this, TableData);

    return _possibleConstructorReturn(this, (TableData.__proto__ || Object.getPrototypeOf(TableData)).apply(this, arguments));
  }

  _createClass(TableData, [{
    key: 'render',
    value: function render() {
      var _props8 = this.props,
          className = _props8.className,
          children = _props8.children;


      return _react2.default.createElement(
        'td',
        { className: 'rev-Table-Data ' + className },
        children
      );
    }
  }]);

  return TableData;
}(_react.Component);

TableData.propTypes = {
  className: _propTypes2.default.string,
  children: _propTypes2.default.node
};

Table.Data = TableData;
//# sourceMappingURL=Table.js.map