{"version":3,"sources":["../../src/TimePicker/TimeTicker.js"],"names":["TimeTicker","props","className","previousLabel","nextLabel","value","onIncrement","onDecrement","Component","propTypes","PropTypes","node","any","func","refocusOnClick","bool","string","defaultProps"],"mappings":";;;;;;;;;;AACA;;AACA;;;;AACA;;;;;;;;;;;;+eAHA;;;AAKA;;;;;;AAMA;AACA;;IAEMA,U;;;;;;;;;;;6BAgBK;AAAA,mBASH,KAAKC,KATF;AAAA,UAELC,SAFK,UAELA,SAFK;AAAA,UAGLC,aAHK,UAGLA,aAHK;AAAA,UAILC,SAJK,UAILA,SAJK;AAAA,UAKLC,KALK,UAKLA,KALK;AAAA,UAMLC,WANK,UAMLA,WANK;AAAA,UAOLC,WAPK,UAOLA,WAPK;AAAA,UAQFN,KARE;;AAWP,aACE;AAAA;AAAA,qBAASA,KAAT,IAAgB,+BAA6BC,SAA7C;AACE;AAAC,0BAAD;AAAA;AACE,qBAASI,WADX;AAEE,uBAAU;AAFZ;AAIGF;AAJH,SADF;AAQE;AAAA;AAAA,YAAK,WAAU,sBAAf;AAAuCC;AAAvC,SARF;AAUE;AAAC,0BAAD;AAAA;AACE,qBAASE,WADX;AAEE,uBAAU;AAFZ;AAIGJ;AAJH;AAVF,OADF;AAmBD;;;;EA9CsBK,gB;;AAAnBR,U,CACGS,S,GAAY;AACjBN,iBAAeO,oBAAUC,IADR;AAEjBP,aAAWM,oBAAUC,IAFJ;AAGjBN,SAAOK,oBAAUE,GAHA;AAIjBN,eAAaI,oBAAUG,IAJN;AAKjBN,eAAaG,oBAAUG,IALN;AAMjBC,kBAAgBJ,oBAAUK,IANT;AAOjBb,aAAWQ,oBAAUM;AAPJ,C;AADfhB,U,CAWGiB,Y,GAAe;AACpBd,iBAAe;AAAA;AAAA;AAAA;AAAA,GADK;AAEpBC,aAAW;AAAA;AAAA;AAAA;AAAA;AAFS,C;kBAsCTJ,U","file":"TimeTicker.js","sourcesContent":["/** @jsx createElement */\nimport {Component, createElement} from 'react'\nimport PropTypes from 'prop-types'\nimport Button from '../Button'\n\n/**\n * A component which increments or decrements a unit of time,\n * e.g. (01-12 for hours, 00-59 for minutes, and AM/PM)\n * @param {object} props - the props of the TimeTicker\n */\n\n// TODO: Generalize this to a general incrementor/decrementor\n// component that can cycle through a range of numbers or an enum\n\nclass TimeTicker extends Component {\n  static propTypes = {\n    previousLabel: PropTypes.node,\n    nextLabel: PropTypes.node,\n    value: PropTypes.any,\n    onIncrement: PropTypes.func,\n    onDecrement: PropTypes.func,\n    refocusOnClick: PropTypes.bool,\n    className: PropTypes.string,\n  }\n\n  static defaultProps = {\n    previousLabel: <span>&#709;</span>,\n    nextLabel: <span>&#708;</span>,\n  }\n\n  render() {\n    const {\n      className,\n      previousLabel,\n      nextLabel,\n      value,\n      onIncrement,\n      onDecrement,\n      ...props\n    } = this.props\n\n    return (\n      <div {...props} className={`rev-TimeTicker ${className}`}>\n        <Button\n          onClick={onIncrement}\n          className=\"rev-TimeTicker-button rev-TimeTicker-button--next\"\n        >\n          {nextLabel}\n        </Button>\n\n        <div className=\"rev-TimeTicker-value\">{value}</div>\n\n        <Button\n          onClick={onDecrement}\n          className=\"rev-TimeTicker-button rev-TimeTicker-button--previous\"\n        >\n          {previousLabel}\n        </Button>\n      </div>\n    )\n  }\n}\n\nexport default TimeTicker\n"]}