'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Input = require('../Input');

var _Input2 = _interopRequireDefault(_Input);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /** @jsx createElement */


/**
 * A component which contains the input for a TimePicker.
 * @param {object} props - the props of the TimeInput
 */
var TimeInput = function (_Component) {
  _inherits(TimeInput, _Component);

  function TimeInput() {
    _classCallCheck(this, TimeInput);

    return _possibleConstructorReturn(this, (TimeInput.__proto__ || Object.getPrototypeOf(TimeInput)).apply(this, arguments));
  }

  _createClass(TimeInput, [{
    key: 'render',

    /* eslint complexity: [2, 5] */
    value: function render() {
      var _props = this.props,
          className = _props.className,
          useGoodTimeInput = _props.useGoodTimeInput,
          showSeconds = _props.showSeconds,
          formattedValue = _props.formattedValue,
          isoValue = _props.isoValue,
          generation = _props.generation,
          name = _props.name,
          props = _objectWithoutProperties(_props, ['className', 'useGoodTimeInput', 'showSeconds', 'formattedValue', 'isoValue', 'generation', 'name']);

      return (0, _react.createElement)(
        'div',
        null,
        (0, _react.createElement)(_Input2.default, _extends({}, props, {
          className: className,
          step: showSeconds ? '1' : null,
          type: 'time',
          name: useGoodTimeInput ? name : null,
          defaultValue: formattedValue
        })),
        useGoodTimeInput ? null : (0, _react.createElement)(_Input2.default, {
          type: 'hidden',
          name: name,
          key: generation + ':trueInput',
          value: isoValue || '',
          readOnly: true
        })
      );
    }
  }]);

  return TimeInput;
}(_react.Component);

TimeInput.propTypes = {
  error: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.string]),
  useGoodTimeInput: _propTypes2.default.bool,
  showSeconds: _propTypes2.default.bool,
  formattedValue: _propTypes2.default.string,
  isoValue: _propTypes2.default.string,
  generation: _propTypes2.default.number,
  className: _propTypes2.default.string };
exports.default = TimeInput;
//# sourceMappingURL=TimeInput.js.map