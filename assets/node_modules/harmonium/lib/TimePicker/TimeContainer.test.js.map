{"version":3,"sources":["../../src/TimePicker/TimeContainer.test.js"],"names":["describe","it","container","testHour","DateTime","local","hour","testMinute","minute","testMeridiem","testTimeString","state","time","meridiem","timeString","expect","to","equal","find","first","simulate","preventDefault","testTime","minus","Duration","fromObject","hours","toString","text","plus","at","minutes","seconds","testSecond","second","timekeeper","freeze","Date","reset","last"],"mappings":"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","file":"TimeContainer.test.js","sourcesContent":["import React from 'react'\nimport {shallow, mount} from 'enzyme'\nimport TimeContainer from './TimeContainer'\nimport {DateTime, Duration} from 'luxon'\nimport timekeeper from 'timekeeper'\n\ndescribe('TimeContainer', () => {\n  it('should render without throwing', () => {\n    shallow(<TimeContainer />)\n  })\n\n  it('defaults to the current time', () => {\n    const container = shallow(<TimeContainer />)\n\n    const testHour = DateTime.local().hour % 12\n    const testMinute = DateTime.local().minute\n    const testMeridiem = DateTime.local().hour >= 12 ? 'PM' : 'AM'\n    const testTimeString = `${testHour}:${testMinute} ${testMeridiem}`\n\n    const hour = container.state().time.hour % 12\n    const minute = container.state().time.minute\n    const meridiem = container.state().time.hour >= 12 ? 'PM' : 'AM'\n    const timeString = `${hour}:${minute} ${meridiem}`\n\n    expect(timeString).to.equal(testTimeString)\n  })\n\n  it('treats invalid times as the current time', () => {\n    const container = shallow(<TimeContainer selectedTime=\"05 : 17\" />)\n\n    const testHour = DateTime.local().hour % 12\n    const testMinute = DateTime.local().minute\n    const testMeridiem = DateTime.local().hour >= 12 ? 'PM' : 'AM'\n    const testTimeString = `${testHour}:${testMinute} ${testMeridiem}`\n\n    const hour = container.state().time.hour % 12\n    const minute = container.state().time.minute\n    const meridiem = container.state().time.hour >= 12 ? 'PM' : 'AM'\n    const timeString = `${hour}:${minute} ${meridiem}`\n\n    expect(timeString).to.equal(testTimeString)\n  })\n\n  it('can advance an hour backward', () => {\n    const container = mount(<TimeContainer />)\n\n    container\n      .find('button.rev-TimeTicker-button--previous')\n      .first()\n      .simulate('click', {preventDefault: () => null})\n    const testTime = DateTime.local().minus(Duration.fromObject({hours: 1}))\n    const testHour = (testTime.hour % 12 ? testTime.hour % 12 : 12).toString()\n    // cast time text to number to unformat 0 in front of single digits so that test passes for single digits\n    const hour = (+container\n      .find('.rev-TimeTicker-value')\n      .first()\n      .text()).toString()\n\n    expect(hour).to.equal(testHour)\n  })\n\n  it('can advance an hour forward', () => {\n    const container = mount(<TimeContainer />)\n\n    container\n      .find('button.rev-TimeTicker-button--next')\n      .first()\n      .simulate('click', {preventDefault: () => null})\n    const testTime = DateTime.local().plus(Duration.fromObject({hours: 1}))\n    const testHour = (testTime.hour % 12 ? testTime.hour % 12 : 12).toString()\n    // cast time text to number to unformat 0 in front of single digits so that test passes for single digits\n    const hour = (+container\n      .find('.rev-TimeTicker-value')\n      .first()\n      .text()).toString()\n\n    expect(hour).to.equal(testHour)\n  })\n\n  it('can advance a minute backward', () => {\n    const container = mount(<TimeContainer />)\n\n    container\n      .find('button.rev-TimeTicker-button--previous')\n      .at(1)\n      .simulate('click', {preventDefault: () => null})\n    const testTime = DateTime.local().minus(Duration.fromObject({minutes: 1}))\n    const testMinute = testTime.minute.toString()\n    // cast time text to number to unformat 0 in front of single digits so that test passes for single digits\n    const minute = (+container\n      .find('.rev-TimeTicker-value')\n      .at(1)\n      .text()).toString()\n\n    expect(minute).to.equal(testMinute)\n  })\n\n  it('can advance a minute forward', () => {\n    const container = mount(<TimeContainer />)\n\n    container\n      .find('button.rev-TimeTicker-button--next')\n      .at(1)\n      .simulate('click', {preventDefault: () => null})\n    const testTime = DateTime.local().plus(Duration.fromObject({minutes: 1}))\n    const testMinute = testTime.minute.toString()\n    // cast time text to number to unformat 0 in front of single digits so that test passes for single digits\n    const minute = (+container\n      .find('.rev-TimeTicker-value')\n      .at(1)\n      .text()).toString()\n\n    expect(minute).to.equal(testMinute)\n  })\n\n  it('can advance a second backward', () => {\n    const container = mount(<TimeContainer showSeconds />)\n\n    container\n      .find('button.rev-TimeTicker-button--previous')\n      .at(2)\n      .simulate('click', {preventDefault: () => null})\n    const testTime = DateTime.local().minus(Duration.fromObject({seconds: 1}))\n    const testSecond = testTime.second.toString()\n    // cast time text to number to unformat 0 in front of single digits so that test passes for single digits\n    const second = (+container\n      .find('.rev-TimeTicker-value')\n      .at(2)\n      .text()).toString()\n\n    expect(second).to.equal(testSecond)\n  })\n\n  it('can advance a second forward', () => {\n    timekeeper.freeze(new Date())\n    const testTime = DateTime.local().plus(Duration.fromObject({seconds: 1}))\n    const testSecond = testTime.second.toString()\n    const container = mount(<TimeContainer showSeconds />)\n\n    container\n      .find('button.rev-TimeTicker-button--next')\n      .at(2)\n      .simulate('click', {preventDefault: () => null})\n\n    // cast time text to number to unformat 0 in front of single digits so that test passes for single digits\n    const second = (+container\n      .find('.rev-TimeTicker-value')\n      .at(2)\n      .text()).toString()\n\n    timekeeper.reset()\n\n    expect(second).to.equal(testSecond)\n  })\n\n  it('can advance AM/PM backward', () => {\n    const container = mount(<TimeContainer />)\n\n    container\n      .find('button.rev-TimeTicker-button--previous')\n      .last()\n      .simulate('click', {preventDefault: () => null})\n    const testTime = DateTime.local().minus(Duration.fromObject({hour: 12}))\n    const testMeridiem = testTime.hour >= 12 ? 'PM' : 'AM'\n    const meridiem = container\n      .find('.rev-TimeTicker-value')\n      .last()\n      .text()\n\n    expect(meridiem).to.equal(testMeridiem)\n  })\n\n  it('can advance AM/PM forward', () => {\n    const container = mount(<TimeContainer />)\n\n    container\n      .find('button.rev-TimeTicker-button--next')\n      .last()\n      .simulate('click', {preventDefault: () => null})\n    const testTime = DateTime.local().plus(Duration.fromObject({hour: 12}))\n    const testMeridiem = testTime.hour >= 12 ? 'PM' : 'AM'\n    const meridiem = container\n      .find('.rev-TimeTicker-value')\n      .last()\n      .text()\n\n    expect(meridiem).to.equal(testMeridiem)\n  })\n})\n"]}