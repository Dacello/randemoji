{"version":3,"sources":["../src/Col.test.js"],"names":["describe","it","inherentClassName","testClassName","childClassName","first","prop","expect","to","contain","propToClass","small","medium","large","smallOffset","mediumOffset","largeOffset","smallPush","mediumPush","largePush","smallPull","mediumPull","largePull","smallOrder","mediumOrder","largeOrder","key","Object","prototype","hasOwnProperty","call","value","props","col"],"mappings":";;AAAA;;;;AACA;;AACA;;;;;;;;AAEAA,SAAS,KAAT,EAAgB,YAAM;AACpBC,KAAG,gCAAH,EAAqC,YAAM;AACzC,yBAAQ,8BAAC,aAAD,OAAR;AACD,GAFD;;AAIAA,KAAG,+BAAH,EAAoC,YAAM;AACxC,QAAMC,oBAAoB,SAA1B;AACA,QAAMC,gBAAgB,UAAtB;;AAEA,QAAMC,iBAAiB,qBAAQ,8BAAC,aAAD,IAAK,WAAWD,aAAhB,GAAR,EACpBE,KADoB,GAEpBC,IAFoB,CAEf,WAFe,CAAvB;;AAIAC,WAAOH,cAAP,EAAuBI,EAAvB,CAA0BC,OAA1B,CAAkCP,iBAAlC;AACAK,WAAOH,cAAP,EAAuBI,EAAvB,CAA0BC,OAA1B,CAAkCN,aAAlC;AACD,GAVD;;AAYAF,KAAG,6BAAH,EAAkC,YAAM;AACtC,QAAMS,cAAc;AAClBC,aAAO,gBADW;AAElBC,cAAQ,iBAFU;AAGlBC,aAAO,gBAHW;AAIlBC,mBAAa,sBAJK;AAKlBC,oBAAc,wBALI;AAMlBC,mBAAa,sBANK;AAOlBC,iBAAW,oBAPO;AAQlBC,kBAAY,qBARM;AASlBC,iBAAW,oBATO;AAUlBC,iBAAW,oBAVO;AAWlBC,kBAAY,qBAXM;AAYlBC,iBAAW,oBAZO;AAalBC,kBAAY,qBAbM;AAclBC,mBAAa,sBAdK;AAelBC,kBAAY;AAfM,KAApB;;AAkBA,SAAK,IAAMC,GAAX,IAAkBhB,WAAlB,EAA+B;AAC7B,UAAIiB,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCpB,WAArC,EAAkDgB,GAAlD,CAAJ,EAA4D;AAC1D,YAAMK,QAAQrB,YAAYgB,GAAZ,CAAd;AACA,YAAMM,4BAAUN,GAAV,EAAgB,CAAhB,CAAN;AACA,YAAMO,MAAM,qBAAQ,8BAAC,aAAD,EAASD,KAAT,CAAR,CAAZ;;AAEAzB,eAAO0B,IAAI3B,IAAJ,CAAS,WAAT,CAAP,EAA8BE,EAA9B,CAAiCC,OAAjC,CAAyCsB,KAAzC;AACD;AACF;AACF,GA5BD;;AA8BA9B,KAAG,uBAAH,EAA4B,YAAM;AAChC,QAAMgC,MAAM,qBAAQ,8BAAC,aAAD,IAAK,mBAAL,GAAR,CAAZ;;AAEA1B,WAAO0B,IAAI3B,IAAJ,CAAS,WAAT,CAAP,EAA8BE,EAA9B,CAAiCC,OAAjC,CAAyC,wBAAzC;AACD,GAJD;AAKD,CApDD","file":"Col.test.js","sourcesContent":["import React from 'react'\nimport {shallow} from 'enzyme'\nimport Col from './Col'\n\ndescribe('Col', () => {\n  it('should render without throwing', () => {\n    shallow(<Col />)\n  })\n\n  it('should add className to child', () => {\n    const inherentClassName = 'rev-Col'\n    const testClassName = '__TEST__'\n\n    const childClassName = shallow(<Col className={testClassName} />)\n      .first()\n      .prop('className')\n\n    expect(childClassName).to.contain(inherentClassName)\n    expect(childClassName).to.contain(testClassName)\n  })\n\n  it('handles column number props', () => {\n    const propToClass = {\n      small: 'rev-Col--small',\n      medium: 'rev-Col--medium',\n      large: 'rev-Col--large',\n      smallOffset: 'rev-Col--smallOffset',\n      mediumOffset: ' rev-Col--mediumOffset',\n      largeOffset: 'rev-Col--largeOffset',\n      smallPush: 'rev-Col--smallPush',\n      mediumPush: 'rev-Col--mediumPush',\n      largePush: 'rev-Col--largePush',\n      smallPull: 'rev-Col--smallPull',\n      mediumPull: 'rev-Col--mediumPull',\n      largePull: 'rev-Col--largePull',\n      smallOrder: 'rev-Col--smallOrder',\n      mediumOrder: 'rev-Col--mediumOrder',\n      largeOrder: 'rev-Col--largeOrder',\n    }\n\n    for (const key in propToClass) {\n      if (Object.prototype.hasOwnProperty.call(propToClass, key)) {\n        const value = propToClass[key]\n        const props = {[key]: 1}\n        const col = shallow(<Col {...props} />)\n\n        expect(col.prop('className')).to.contain(value)\n      }\n    }\n  })\n\n  it('handles boolean props', () => {\n    const col = shallow(<Col smallCentered />)\n\n    expect(col.prop('className')).to.contain('rev-Col--smallCentered')\n  })\n})\n"]}