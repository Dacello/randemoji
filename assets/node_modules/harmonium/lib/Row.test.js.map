{"version":3,"sources":["../src/Row.test.js"],"names":["describe","it","inherentClassName","testClassName","childClassName","first","prop","expect","to","contain","cases","smallUp","mediumUp","largeUp","propName","Object","prototype","hasOwnProperty","call","classPattern","component"],"mappings":";;AAAA;;;;AACA;;AACA;;;;;;;;AAEAA,SAAS,KAAT,EAAgB,YAAM;AACpBC,KAAG,gCAAH,EAAqC,YAAM;AACzC,yBAAQ,8BAAC,aAAD,OAAR;AACD,GAFD;;AAIAA,KAAG,+BAAH,EAAoC,YAAM;AACxC,QAAMC,oBAAoB,SAA1B;AACA,QAAMC,gBAAgB,UAAtB;;AAEA,QAAMC,iBAAiB,qBAAQ,8BAAC,aAAD,IAAK,WAAWD,aAAhB,GAAR,EACpBE,KADoB,GAEpBC,IAFoB,CAEf,WAFe,CAAvB;;AAIAC,WAAOH,cAAP,EAAuBI,EAAvB,CAA0BC,OAA1B,CAAkCP,iBAAlC;AACAK,WAAOH,cAAP,EAAuBI,EAAvB,CAA0BC,OAA1B,CAAkCN,aAAlC;AACD,GAVD;;AAYAF,KAAG,yBAAH,EAA8B,YAAM;AAClC,QAAMS,QAAQ;AACZ;AACAC,eAAS,mBAFG;AAGZC,gBAAU,oBAHE;AAIZC,eAAS;AAJG,KAAd;;AAOA,SAAK,IAAMC,QAAX,IAAuBJ,KAAvB,EAA8B;AAC5B,UAAIK,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,KAArC,EAA4CI,QAA5C,CAAJ,EAA2D;AACzD,YAAMK,eAAeT,MAAMI,QAAN,CAArB;AACA,YAAMM,YAAY,qBAAQ,8BAAC,aAAD,sBAAWN,QAAX,EAAsB,CAAtB,EAAR,CAAlB;;AAEAP,eAAOa,UAAUd,IAAV,CAAe,WAAf,CAAP,EAAoCE,EAApC,CAAuCC,OAAvC,CAA+CU,YAA/C;AACD;AACF;AACF,GAhBD;;AAkBAlB,KAAG,uBAAH,EAA4B,YAAM;AAChC,QAAMmB,YAAY,qBAAQ,8BAAC,aAAD,IAAK,cAAL,GAAR,CAAlB;;AAEAb,WAAOa,UAAUd,IAAV,CAAe,WAAf,CAAP,EAAoCE,EAApC,CAAuCC,OAAvC,CAA+C,UAA/C;AACD,GAJD;AAKD,CAxCD","file":"Row.test.js","sourcesContent":["import React from 'react'\nimport {shallow} from 'enzyme'\nimport Row from './Row'\n\ndescribe('Row', () => {\n  it('should render without throwing', () => {\n    shallow(<Row />)\n  })\n\n  it('should add className to child', () => {\n    const inherentClassName = 'rev-Row'\n    const testClassName = '__TEST__'\n\n    const childClassName = shallow(<Row className={testClassName} />)\n      .first()\n      .prop('className')\n\n    expect(childClassName).to.contain(inherentClassName)\n    expect(childClassName).to.contain(testClassName)\n  })\n\n  it('handles numerical props', () => {\n    const cases = {\n      /* prop: classPattern */\n      smallUp: 'rev-Row--smallUp1',\n      mediumUp: 'rev-Row--mediumUp1',\n      largeUp: 'rev-Row--largeUp1',\n    }\n\n    for (const propName in cases) {\n      if (Object.prototype.hasOwnProperty.call(cases, propName)) {\n        const classPattern = cases[propName]\n        const component = shallow(<Row {...{[propName]: 1}} />)\n\n        expect(component.prop('className')).to.contain(classPattern)\n      }\n    }\n  })\n\n  it('handles boolean props', () => {\n    const component = shallow(<Row collapse />)\n\n    expect(component.prop('className')).to.contain('collapse')\n  })\n})\n"]}