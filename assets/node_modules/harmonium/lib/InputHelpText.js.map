{"version":3,"sources":["../src/InputHelpText.js"],"names":["InputHelpText","props","children","className","newClassName","Component","propTypes","PropTypes","oneOfType","string","node"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEqBA,a;;;;;;;;;;;6BAMV;AAAA,mBACiC,KAAKC,KADtC;AAAA,UACAC,QADA,UACAA,QADA;AAAA,UACUC,SADV,UACUA,SADV;AAAA,UACwBF,KADxB;;AAGP,UAAI,CAACC,QAAL,EAAe;AACb,eAAO,IAAP;AACD;;AAED,UAAME,eAAe,0BAAWD,SAAX,EAAsB,mBAAtB,CAArB;;AAEA,aACE;AAAC,0BAAD;AAAA,mBAAU,WAAWC,YAArB,IAAuCH,KAAvC;AACGC;AADH,OADF;AAKD;;;;EApBwCG,gB;;AAAtBL,a,CACZM,S,GAAY;AACjBJ,YAAUK,oBAAUC,SAAV,CAAoB,CAACD,oBAAUE,MAAX,EAAmBF,oBAAUG,IAA7B,CAApB,CADO;AAEjBP,aAAWI,oBAAUE;AAFJ,C;kBADAT,a","file":"InputHelpText.js","sourcesContent":["import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport HelpText from './HelpText'\n\nexport default class InputHelpText extends Component {\n  static propTypes = {\n    children: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    className: PropTypes.string,\n  }\n\n  render() {\n    const {children, className, ...props} = this.props\n\n    if (!children) {\n      return null\n    }\n\n    const newClassName = classNames(className, 'rev-InputHelpText')\n\n    return (\n      <HelpText className={newClassName} {...props}>\n        {children}\n      </HelpText>\n    )\n  }\n}\n"]}