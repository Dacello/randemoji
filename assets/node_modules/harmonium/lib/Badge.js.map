{"version":3,"sources":["../src/Badge.js"],"names":["PROP_NAME_TO_CLASS_NAME","primary","secondary","tertiary","accent","alert","warning","success","PROP_NAMES","Object","keys","PROP_TYPES","icon","PropTypes","string","className","children","node","forEach","key","bool","Badge","props","propClassNames","name","push","newClassName","Component","propTypes"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;AAEA,IAAMA,0BAA0B;AAC9BC,WAAS,CAAC,oBAAD,CADqB;AAE9BC,aAAW,CAAC,sBAAD,CAFmB;AAG9BC,YAAU,CAAC,qBAAD,CAHoB;AAI9BC,UAAQ,CAAC,mBAAD,CAJsB;AAK9BC,SAAO,CAAC,kBAAD,CALuB;AAM9BC,WAAS,CAAC,oBAAD,CANqB;AAO9BC,WAAS,CAAC,oBAAD;AAPqB,CAAhC;AASA,IAAMC,aAAaC,OAAOC,IAAP,CAAYV,uBAAZ,CAAnB;AACA,IAAMW,aAAa;AACjBC,QAAMC,oBAAUC,MADC;AAEjBC,aAAWF,oBAAUC,MAFJ;AAGjBE,YAAUH,oBAAUI;AAHH,CAAnB;;AAMAT,WAAWU,OAAX,CAAmB,UAACC,GAAD;AAAA,SAAUR,WAAWQ,GAAX,IAAkBN,oBAAUO,IAAtC;AAAA,CAAnB;;IAEqBC,K;;;;;;;;;;;6BAGV;AAAA,mBACuC,KAAKC,KAD5C;AAAA,UACAP,SADA,UACAA,SADA;AAAA,UACWC,QADX,UACWA,QADX;AAAA,UACqBJ,IADrB,UACqBA,IADrB;AAAA,UAC8BU,KAD9B;;AAGP,UAAMC,iBAAiB,EAAvB;;AAEAf,iBAAWU,OAAX,CAAmB,UAACM,IAAD,EAAU;AAC3B,YAAIF,MAAME,IAAN,CAAJ,EAAiB;AACfD,yBAAeE,IAAf,CAAoBzB,wBAAwBwB,IAAxB,CAApB;AACA,iBAAOF,MAAME,IAAN,CAAP;AACD;AACF,OALD;;AAOA,UAAME,eAAe,0BAAWX,SAAX,EAAsB,WAAtB,EAAmCQ,cAAnC,CAArB;;AAEA,aACE;AAAA;AAAA,qBAAUD,KAAV,IAAiB,WAAWI,YAA5B;AACGd,eAAO,8BAAC,cAAD,IAAM,GAAGA,IAAT,EAAe,WAAU,gBAAzB,GAAP,GAAsD,IADzD;AAAA;AACgEI;AADhE,OADF;AAKD;;;;EAtBgCW,gB;;AAAdN,K,CACZO,S,GAAYjB,U;kBADAU,K","file":"Badge.js","sourcesContent":["import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport Icon from './Icon'\n\nconst PROP_NAME_TO_CLASS_NAME = {\n  primary: ['rev-Badge--primary'],\n  secondary: ['rev-Badge--secondary'],\n  tertiary: ['rev-Badge--tertiary'],\n  accent: ['rev-Badge--accent'],\n  alert: ['rev-Badge--alert'],\n  warning: ['rev-Badge--warning'],\n  success: ['rev-Badge--success'],\n}\nconst PROP_NAMES = Object.keys(PROP_NAME_TO_CLASS_NAME)\nconst PROP_TYPES = {\n  icon: PropTypes.string,\n  className: PropTypes.string,\n  children: PropTypes.node,\n}\n\nPROP_NAMES.forEach((key) => (PROP_TYPES[key] = PropTypes.bool))\n\nexport default class Badge extends Component {\n  static propTypes = PROP_TYPES\n\n  render() {\n    const {className, children, icon, ...props} = this.props\n\n    const propClassNames = []\n\n    PROP_NAMES.forEach((name) => {\n      if (props[name]) {\n        propClassNames.push(PROP_NAME_TO_CLASS_NAME[name])\n        delete props[name]\n      }\n    })\n\n    const newClassName = classNames(className, 'rev-Badge', propClassNames)\n\n    return (\n      <span {...props} className={newClassName}>\n        {icon ? <Icon i={icon} className=\"rev-Badge-icon\" /> : null} {children}\n      </span>\n    )\n  }\n}\n"]}