{"version":3,"sources":["../src/Pagination.js"],"names":["Pagination","props","currentPage","totalPages","maxViewPages","attributes","beginArrows","endArrows","start","end","Math","ceil","buffer","floor","unevenAmount","relevant","samePage","hideArrows","baseRange","Array","from","keys","href","currentPageText","anchorAriaLabel","map","e","page","createClickHandler","pageNumber","preventDefault","onPageClick","invalidPage","firstPageContent","lastPageContent","mobilePageListText","nextPageContent","previousPageContent","getAttributes","beginArrowsClass","getArrowClass","endArrowsClass","className","numberLinks","Component","propTypes","PropTypes","func","string","number","isRequired","node","bool","defaultProps","showFirstLast"],"mappings":"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","file":"Pagination.js","sourcesContent":["import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\n// TODO: once icons are added to this repo, enable them here.\nexport default class Pagination extends Component {\n  static propTypes = {\n    anchorAriaLabel: PropTypes.func,\n    className: PropTypes.string,\n    currentPage: PropTypes.number.isRequired,\n    currentPageText: PropTypes.string,\n    firstPageContent: PropTypes.node,\n    hideArrows: PropTypes.bool,\n    lastPageContent: PropTypes.node,\n    maxViewPages: PropTypes.number,\n    mobilePageListText: PropTypes.func,\n    nextPageContent: PropTypes.node,\n    onPageClick: PropTypes.func.isRequired,\n    previousPageContent: PropTypes.node,\n    href: PropTypes.func,\n    totalPages: PropTypes.number.isRequired,\n  }\n\n  static defaultProps = {\n    anchorAriaLabel: (page) => `Page ${page}`,\n    currentPageText: \"You're on page \",\n    firstPageContent: (\n      <span>\n        <i className=\"icon-angle-double-left\" />\n        First\n        <span className=\"ShowForSR\"> page</span>\n      </span>\n    ),\n    hideArrows: false,\n    lastPageContent: (\n      <span>\n        Last\n        <span className=\"ShowForSR\"> page</span>\n        <i className=\"icon-angle-double-right\" />\n      </span>\n    ),\n    maxViewPages: 5,\n    mobilePageListText: (currentPage, totalPages) =>\n      `Page ${currentPage} of ${totalPages}`,\n    nextPageContent: (\n      <span>\n        Next\n        <span className=\"ShowForSR\"> page</span>\n        <i className=\"icon-angle-right\" />\n      </span>\n    ),\n    previousPageContent: (\n      <span>\n        <i className=\"icon-angle-left\" />\n        Previous\n        <span className=\"ShowForSR\"> page</span>\n      </span>\n    ),\n    href: () => '#',\n    showFirstLast: true,\n  }\n  /* eslint complexity: [2, 4] */\n  getAttributes() {\n    const {currentPage, totalPages, maxViewPages} = this.props\n    const attributes = {beginArrows: false, endArrows: false}\n\n    if (totalPages <= maxViewPages) {\n      attributes.start = 1\n      attributes.end = totalPages\n    } else if (currentPage <= Math.ceil(maxViewPages / 2)) {\n      // Left end\n      attributes.start = 1\n      attributes.end = maxViewPages\n      attributes.endArrows = true\n    } else if (currentPage > totalPages - Math.ceil(maxViewPages / 2)) {\n      // Right end\n      attributes.start = totalPages - (maxViewPages - 1)\n      attributes.end = totalPages\n      attributes.beginArrows = true\n    } else {\n      // Middle\n      const buffer = Math.floor((maxViewPages - 2) / 2)\n      const unevenAmount = (maxViewPages - 2) % 2\n\n      attributes.start = currentPage - (buffer + unevenAmount)\n      attributes.end = currentPage + buffer\n      attributes.beginArrows = true\n      attributes.endArrows = true\n    }\n\n    return attributes\n  }\n  /* eslint complexity: [2, 7] */\n  getArrowClass(relevant, samePage) {\n    const {hideArrows} = this.props\n\n    if (!relevant && hideArrows && samePage) {\n      return 'rev-Pagination-arrow rev-Pagination-arrow--hidden'\n    } else if (!relevant && hideArrows) {\n      return 'rev-Pagination-arrow rev-Pagination-arrow--hidden'\n    } else if (samePage) {\n      return 'rev-Pagination-arrow rev-Pagination-arrow--disabled'\n    } else {\n      return 'rev-Pagination-arrow'\n    }\n  }\n\n  numberLinks(start, end) {\n    const baseRange = Array.from(Array(end - start + 1).keys())\n    const {currentPage, href, currentPageText, anchorAriaLabel} = this.props\n\n    return baseRange.map((e) => {\n      const page = e + start\n\n      if (page === currentPage) {\n        return (\n          <li\n            key={page}\n            className=\"rev-Pagination-number rev-Pagination-number--selected\"\n          >\n            <span className=\"ShowForSR\">{currentPageText}</span>\n            {/* eslint-disable jsx-a11y/anchor-is-valid */}\n            <a>{page}</a>\n            {/* eslint-enable jsx-a11y/anchor-is-valid */}\n          </li>\n        )\n      } else {\n        return (\n          <li key={page} className=\"rev-Pagination-number\">\n            <a\n              href={href(page)}\n              onClick={this.createClickHandler(page)}\n              aria-label={anchorAriaLabel(page)}\n            >\n              {page}\n            </a>\n          </li>\n        )\n      }\n    })\n  }\n\n  createClickHandler(pageNumber) {\n    return (e) => {\n      e.preventDefault()\n      const {currentPage, totalPages, onPageClick} = this.props\n      const samePage = pageNumber === currentPage\n      const invalidPage = pageNumber < 1 || pageNumber > totalPages\n\n      if (!samePage && !invalidPage) {\n        onPageClick(pageNumber)\n      }\n    }\n  }\n\n  render() {\n    const {\n      currentPage,\n      firstPageContent,\n      lastPageContent,\n      mobilePageListText,\n      nextPageContent,\n      previousPageContent,\n      href,\n      totalPages,\n    } = this.props\n    const {beginArrows, endArrows, start, end} = this.getAttributes()\n    const beginArrowsClass = this.getArrowClass(beginArrows, currentPage === 1)\n    const endArrowsClass = this.getArrowClass(\n      endArrows,\n      currentPage === totalPages\n    )\n\n    if (totalPages === 1) {\n      return null\n    } else {\n      return (\n        <div\n          className={classNames('rev-PaginationWrapper', this.props.className)}\n        >\n          <ul\n            className=\"rev-Pagination\"\n            role=\"navigation\"\n            aria-label=\"Pagination\"\n          >\n            <li className={beginArrowsClass}>\n              <a href={href(1)} onClick={this.createClickHandler(1)}>\n                {firstPageContent}\n              </a>\n            </li>\n            <li className={beginArrowsClass}>\n              <a\n                href={href(currentPage - 1)}\n                onClick={this.createClickHandler(currentPage - 1)}\n              >\n                {previousPageContent}\n              </a>\n            </li>\n            <li\n              className={classNames(\n                'rev-Pagination-dots',\n                beginArrows ? '' : 'rev-Pagination-dots--hidden'\n              )}\n            >\n              ...\n            </li>\n            {this.numberLinks(start, end)}\n            <li\n              className={classNames(\n                'rev-Pagination-dots',\n                endArrows ? '' : 'rev-Pagination-dots--hidden'\n              )}\n            >\n              ...\n            </li>\n            <li className={endArrowsClass}>\n              <a\n                href={href(currentPage + 1)}\n                onClick={this.createClickHandler(currentPage + 1)}\n              >\n                {nextPageContent}\n              </a>\n            </li>\n            <li className={endArrowsClass}>\n              <a\n                href={href(totalPages)}\n                onClick={this.createClickHandler(totalPages)}\n              >\n                {lastPageContent}\n              </a>\n            </li>\n          </ul>\n          <div className=\"rev-PaginationWrapper-pageList\">\n            <span className=\"Small\">\n              ( {mobilePageListText(currentPage, totalPages)} )\n            </span>\n          </div>\n        </div>\n      )\n    }\n  }\n}\n"]}