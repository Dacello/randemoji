{"version":3,"sources":["../src/StatelessDrawer.test.js"],"names":["describe","it","expander","find","Expander","expect","prop","to","contain","spy","sinon","drawer","simulate","called","eq","not","setProps","open","update","testClassName","input","exists","equal"],"mappings":";;AAAA;;;;AACA;;AACA;;;;AACA;;;;;;AAEAA,SAAS,iBAAT,EAA4B,YAAM;AAChCC,KAAG,eAAH,EAAoB,YAAM;AACxB,yBAAQ,8BAAC,yBAAD,OAAR;AACD,GAFD;;AAIAA,KAAG,0BAAH,EAA+B,YAAM;AACnC,QAAMC,WAAW,qBAAQ,8BAAC,yBAAD,IAAiB,UAAjB,GAAR,EAAkCC,IAAlC,CAAuCC,yBAAvC,CAAjB;;AAEAC,WAAOH,SAASI,IAAT,CAAc,WAAd,CAAP,EAAmCC,EAAnC,CAAsCC,OAAtC,CAA8C,kBAA9C;AACD,GAJD;;AAMAP,KAAG,sBAAH,EAA2B,YAAM;AAC/B,QAAMQ,MAAMC,gBAAMD,GAAN,EAAZ;AACA,QAAME,SAAS,mBAAM,8BAAC,yBAAD,IAAiB,UAAjB,EAAsB,OAAOF,GAA7B,GAAN,CAAf;;AAEAE,WAAOR,IAAP,CAAY,oBAAZ,EAAkCS,QAAlC,CAA2C,OAA3C;;AAEAP,WAAOI,IAAII,MAAX,EAAmBN,EAAnB,CAAsBO,EAAtB,CAAyB,IAAzB;AACD,GAPD;;AASAb,KAAG,uBAAH,EAA4B,YAAM;AAChC,QAAMQ,MAAMC,gBAAMD,GAAN,EAAZ;AACA,QAAME,SAAS,mBAAM,8BAAC,yBAAD,IAAiB,QAAQF,GAAzB,GAAN,CAAf;;AAEAE,WAAOR,IAAP,CAAY,sBAAZ,EAAoCS,QAApC,CAA6C,OAA7C;;AAEAP,WAAOI,IAAII,MAAX,EAAmBN,EAAnB,CAAsBO,EAAtB,CAAyB,IAAzB;AACD,GAPD;;AASAb,KAAG,yBAAH,EAA8B,YAAM;AAClC,QAAMU,SAAS,mBAAM,8BAAC,yBAAD,IAAiB,UAAjB,GAAN,CAAf;AACA,QAAMT,WAAWS,OAAOR,IAAP,CAAYC,yBAAZ,CAAjB;;AAEAC,WAAOH,SAASC,IAAT,CAAc,aAAd,EAA6BG,IAA7B,CAAkC,WAAlC,CAAP,EAAuDC,EAAvD,CAA0DQ,GAA1D,CAA8DP,OAA9D,CACE,kBADF;;AAIAG,WAAOK,QAAP,CAAgB,EAACC,MAAM,IAAP,EAAhB;AACAN,WAAOO,MAAP;;AAEAb,WAAOM,OAAOR,IAAP,CAAY,aAAZ,EAA2BG,IAA3B,CAAgC,WAAhC,CAAP,EAAqDC,EAArD,CAAwDC,OAAxD,CACE,kBADF;;AAIAG,WAAOK,QAAP,CAAgB,EAACC,MAAM,KAAP,EAAhB;AACAN,WAAOO,MAAP;;AAEAb,WAAOH,SAASC,IAAT,CAAc,aAAd,EAA6BG,IAA7B,CAAkC,WAAlC,CAAP,EAAuDC,EAAvD,CAA0DQ,GAA1D,CAA8DP,OAA9D,CACE,kBADF;AAGD,GArBD;;AAuBAP,KAAG,+BAAH,EAAoC,YAAM;AACxC,QAAMkB,gBAAgB,UAAtB;;AAEA,QAAMC,QAAQ,qBAAQ,8BAAC,yBAAD,IAAiB,WAAWD,aAA5B,GAAR,EAAuDhB,IAAvD,OACRgB,aADQ,CAAd;;AAIAd,WAAOe,MAAMC,MAAN,EAAP,EAAuBd,EAAvB,CAA0Be,KAA1B,CAAgC,IAAhC;AACD,GARD;AASD,CA7DD","file":"StatelessDrawer.test.js","sourcesContent":["import React from 'react'\nimport {shallow, mount} from 'enzyme'\nimport StatelessDrawer, {Expander} from './StatelessDrawer'\nimport sinon from 'sinon'\n\ndescribe('StatelessDrawer', () => {\n  it('should render', () => {\n    shallow(<StatelessDrawer />)\n  })\n\n  it('can handle boolean props', () => {\n    const expander = shallow(<StatelessDrawer left />).find(Expander)\n\n    expect(expander.prop('className')).to.contain('rev-Drawer--left')\n  })\n\n  it('handles close clicks', () => {\n    const spy = sinon.spy()\n    const drawer = mount(<StatelessDrawer open close={spy} />)\n\n    drawer.find('.rev-Drawer-closer').simulate('click')\n\n    expect(spy.called).to.eq(true)\n  })\n\n  it('handles expand clicks', () => {\n    const spy = sinon.spy()\n    const drawer = mount(<StatelessDrawer expand={spy} />)\n\n    drawer.find('.rev-Drawer-expander').simulate('click')\n\n    expect(spy.called).to.eq(true)\n  })\n\n  it('can expand and collapse', () => {\n    const drawer = mount(<StatelessDrawer left />)\n    const expander = drawer.find(Expander)\n\n    expect(expander.find('.rev-Drawer').prop('className')).to.not.contain(\n      'rev-Drawer--open'\n    )\n\n    drawer.setProps({open: true})\n    drawer.update()\n\n    expect(drawer.find('.rev-Drawer').prop('className')).to.contain(\n      'rev-Drawer--open'\n    )\n\n    drawer.setProps({open: false})\n    drawer.update()\n\n    expect(expander.find('.rev-Drawer').prop('className')).to.not.contain(\n      'rev-Drawer--open'\n    )\n  })\n\n  it('should add className to child', () => {\n    const testClassName = '__TEST__'\n\n    const input = shallow(<StatelessDrawer className={testClassName} />).find(\n      `.${testClassName}`\n    )\n\n    expect(input.exists()).to.equal(true)\n  })\n})\n"]}