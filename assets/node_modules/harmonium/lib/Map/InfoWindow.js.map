{"version":3,"sources":["../../src/Map/InfoWindow.js"],"names":["InfoWindow","prevProps","props","visible","marker","map","renderInfoWindow","updateContent","openInfoWindow","closeInfoWindow","content","InfoWindowConfig","infowindow","google","maps","setContent","open","close","Component","propTypes","PropTypes","object","bool","string","isRequired"],"mappings":";;;;;;;;AAAA;;AACA;;;;;;;;;;;;IAEqBA,U;;;;;;;;;;;;AACnB;uCACmBC,S,EAAW;AAAA,mBACG,KAAKC,KADR;AAAA,UACrBC,OADqB,UACrBA,OADqB;AAAA,UACZC,MADY,UACZA,MADY;AAAA,UACJC,GADI,UACJA,GADI;;;AAG5B,UAAI,CAACA,GAAL,EAAU;AACR,eAAO,EAAP;AACD;;AAED,UAAIA,QAAQJ,UAAUI,GAAtB,EAA2B;AACzB,aAAKC,gBAAL;AACD;;AAED,UAAIL,UAAUG,MAAV,KAAqBA,MAAzB,EAAiC;AAC/B,aAAKG,aAAL;AACD;;AAED,UAAIJ,OAAJ,EAAa;AACX,eAAO,KAAKK,cAAL,EAAP;AACD,OAFD,MAEO;AACL,eAAO,KAAKC,eAAL,EAAP;AACD;AACF;;;uCAEkB;AAAA,UACVC,OADU,GACC,KAAKR,KADN,CACVQ,OADU;;;AAGjB,UAAMC,mBAAmB;AACvBD;AADuB,OAAzB;;AAIA,WAAKE,UAAL,GAAkB,IAAIC,OAAOC,IAAP,CAAYd,UAAhB,CAA2BW,gBAA3B,CAAlB;AACD;;;oCAEe;AAAA,UACPD,OADO,GACI,KAAKR,KADT,CACPQ,OADO;;;AAGd,WAAKE,UAAL,CAAgBG,UAAhB,CAA2BL,OAA3B;AACD;;;qCAEgB;AAAA,oBACO,KAAKR,KADZ;AAAA,UACRG,GADQ,WACRA,GADQ;AAAA,UACHD,MADG,WACHA,MADG;;;AAGf,UAAIA,MAAJ,EAAY;AACV,eAAO,KAAKQ,UAAL,CAAgBI,IAAhB,CAAqBX,GAArB,EAA0BD,MAA1B,CAAP;AACD;AACD,aAAO,EAAP;AACD;;;sCAEiB;AAChB,aAAO,KAAKQ,UAAL,CAAgBK,KAAhB,EAAP;AACD;;;6BAEQ;AACP,aAAO,IAAP;AACD;;;;EAvDqCC,gB;;kBAAnBlB,U;;;AA0DrBA,WAAWmB,SAAX,GAAuB;AACrBd,OAAKe,oBAAUC,MADM;AAErBjB,UAAQgB,oBAAUC,MAFG;AAGrBlB,WAASiB,oBAAUE,IAHE;AAIrBZ,WAASU,oBAAUG,MAAV,CAAiBC;AAJL,CAAvB","file":"InfoWindow.js","sourcesContent":["import {Component} from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class InfoWindow extends Component {\n  /* eslint complexity: [2, 5] */\n  componentDidUpdate(prevProps) {\n    const {visible, marker, map} = this.props\n\n    if (!map) {\n      return ''\n    }\n\n    if (map !== prevProps.map) {\n      this.renderInfoWindow()\n    }\n\n    if (prevProps.marker !== marker) {\n      this.updateContent()\n    }\n\n    if (visible) {\n      return this.openInfoWindow()\n    } else {\n      return this.closeInfoWindow()\n    }\n  }\n\n  renderInfoWindow() {\n    const {content} = this.props\n\n    const InfoWindowConfig = {\n      content,\n    }\n\n    this.infowindow = new google.maps.InfoWindow(InfoWindowConfig)\n  }\n\n  updateContent() {\n    const {content} = this.props\n\n    this.infowindow.setContent(content)\n  }\n\n  openInfoWindow() {\n    const {map, marker} = this.props\n\n    if (marker) {\n      return this.infowindow.open(map, marker)\n    }\n    return ''\n  }\n\n  closeInfoWindow() {\n    return this.infowindow.close()\n  }\n\n  render() {\n    return null\n  }\n}\n\nInfoWindow.propTypes = {\n  map: PropTypes.object,\n  marker: PropTypes.object,\n  visible: PropTypes.bool,\n  content: PropTypes.string.isRequired,\n}\n"]}