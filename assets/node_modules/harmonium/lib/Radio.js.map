{"version":3,"sources":["../src/Radio.js"],"names":["Radio","props","error","className","label","labelClassName","inputClassName","Component","propTypes","PropTypes","oneOfType","bool","string","RadioFieldset","options","name","value","defaultValue","help","onChange","readOnly","rest","isControlled","hasDefault","radios","map","option","disabled","checked","defaultChecked","key","fieldsetClassName","array","isRequired","any","func","Fieldset"],"mappings":"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","file":"Radio.js","sourcesContent":["import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport InputLabel from './InputLabel'\nimport CheckableFieldset from './CheckableFieldset'\n\nexport default class Radio extends Component {\n  static propTypes = {\n    error: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n    label: PropTypes.string,\n    className: PropTypes.string,\n  }\n\n  render() {\n    const {error, className, label, ...props} = this.props\n\n    const labelClassName = classNames(className, 'rev-Radio', {\n      'is-invalid': !!error,\n    })\n\n    const inputClassName = classNames('rev-Radio-input', {\n      'is-invalid-input': !!error,\n      'is-invalid': !!error,\n    })\n\n    return (\n      <InputLabel className={labelClassName} error={error}>\n        <input {...props} className={inputClassName} type=\"radio\" />\n        <span className=\"rev-Radio-label\">{label}</span>\n      </InputLabel>\n    )\n  }\n}\n\nclass RadioFieldset extends Component {\n  static propTypes = {\n    options: PropTypes.array.isRequired,\n    name: PropTypes.string,\n    value: PropTypes.any,\n    defaultValue: PropTypes.any,\n    label: PropTypes.string,\n    help: PropTypes.string,\n    error: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n    onChange: PropTypes.func,\n    readOnly: PropTypes.bool,\n    className: PropTypes.string,\n  }\n\n  render() {\n    const {\n      className,\n      options,\n      name,\n      value,\n      defaultValue,\n      label,\n      help,\n      error,\n      onChange,\n      readOnly,\n      ...rest\n    } = this.props\n\n    const isControlled = !!value\n    const hasDefault = !!defaultValue\n    /* eslint complexity: [2, 4] */\n    const radios = options.map((option) => {\n      const props = {\n        name,\n        error,\n        onChange,\n        readOnly,\n        label: option.label,\n        disabled: option.disabled,\n      }\n\n      props.value = option.value\n\n      if (isControlled) {\n        props.checked = value === option.value\n      }\n      if (hasDefault) {\n        props.defaultChecked = defaultValue === option.value\n      }\n\n      return (\n        <Radio\n          key={option.key || option.value}\n          className=\"rev-RadioFieldset-radio\"\n          {...props}\n        />\n      )\n    })\n\n    const fieldsetClassName = classNames(className, 'rev-RadioFieldset')\n\n    return (\n      <CheckableFieldset\n        {...rest}\n        className={fieldsetClassName}\n        help={help}\n        error={error}\n        label={label}\n      >\n        {radios}\n      </CheckableFieldset>\n    )\n  }\n}\n\nRadio.Fieldset = RadioFieldset\n"]}