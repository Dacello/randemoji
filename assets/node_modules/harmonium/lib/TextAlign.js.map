{"version":3,"sources":["../src/TextAlign.js"],"names":["CLASS_NAMES","left","right","center","justify","smallLeft","smallRight","smallCenter","smallJustify","mediumLeft","mediumRight","mediumCenter","mediumJustify","largeLeft","largeRight","largeCenter","largeJustify","xlargeLeft","xlargeRight","xlargeCenter","xlargeJustify","xxlargeLeft","xxlargeRight","xxlargeCenter","xxlargeJustify","PROP_TYPES","children","PropTypes","element","Object","keys","forEach","key","bool","TextAlign","classNamesList","props","className","propName","push","Component","propTypes"],"mappings":";;;;;;;;AAAA;;AACA;;;;AACA;;;;;;;;;;;;AAEA,IAAMA,cAAc;AAClBC,QAAM,WADY;AAElBC,SAAO,YAFW;AAGlBC,UAAQ,aAHU;AAIlBC,WAAS,cAJS;;AAMlBC,aAAW,iBANO;AAOlBC,cAAY,kBAPM;AAQlBC,eAAa,mBARK;AASlBC,gBAAc,oBATI;;AAWlBC,cAAY,kBAXM;AAYlBC,eAAa,mBAZK;AAalBC,gBAAc,oBAbI;AAclBC,iBAAe,qBAdG;;AAgBlBC,aAAW,iBAhBO;AAiBlBC,cAAY,kBAjBM;AAkBlBC,eAAa,mBAlBK;AAmBlBC,gBAAc,oBAnBI;;AAqBlBC,cAAY,kBArBM;AAsBlBC,eAAa,mBAtBK;AAuBlBC,gBAAc,oBAvBI;AAwBlBC,iBAAe,qBAxBG;;AA0BlBC,eAAa,mBA1BK;AA2BlBC,gBAAc,oBA3BI;AA4BlBC,iBAAe,qBA5BG;AA6BlBC,kBAAgB;AA7BE,CAApB;;AAgCA,IAAMC,aAAa;AACjBC,YAAUC,oBAAUC;AADH,CAAnB;;AAIAC,OAAOC,IAAP,CAAY9B,WAAZ,EAAyB+B,OAAzB,CAAiC,UAACC,GAAD;AAAA,SAAUP,WAAWO,GAAX,IAAkBL,oBAAUM,IAAtC;AAAA,CAAjC;;IAEqBC,S;;;;;;;;;;;6BAKV;AACP,UAAMC,iBAAiB,CAAC,KAAKC,KAAL,CAAWV,QAAX,CAAoBW,SAArB,CAAvB;;AAEAR,aAAOC,IAAP,CAAY,KAAKM,KAAjB,EAAwBL,OAAxB,CAAgC,UAACO,QAAD,EAAc;AAC5C,YAAMD,YAAYrC,YAAYsC,QAAZ,CAAlB;;AAEA,YAAID,SAAJ,EAAe;AACbF,yBAAeI,IAAf,CAAoBF,SAApB;AACD;AACF,OAND;AAOA,aAAO,yBAAa,KAAKD,KAAL,CAAWV,QAAxB,EAAkC;AACvCW,mBAAW,0BAAWF,cAAX;AAD4B,OAAlC,CAAP;AAGD;;;;EAlBoCK,gB;;AAAlBN,S,CACZO,S,GAAY;AACjBf,YAAUC,oBAAUC;AADH,C;kBADAM,S","file":"TextAlign.js","sourcesContent":["import {Component, cloneElement} from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nconst CLASS_NAMES = {\n  left: 'Text-left',\n  right: 'Text-right',\n  center: 'Text-center',\n  justify: 'Text-justify',\n\n  smallLeft: 'Text--smallLeft',\n  smallRight: 'Text--smallRight',\n  smallCenter: 'Text--smallCenter',\n  smallJustify: 'Text--smallJustify',\n\n  mediumLeft: 'Text--mediumLeft',\n  mediumRight: 'Text--mediumRight',\n  mediumCenter: 'Text--mediumCenter',\n  mediumJustify: 'Text--mediumJustify',\n\n  largeLeft: 'Text--largeLeft',\n  largeRight: 'Text--largeRight',\n  largeCenter: 'Text--largeCenter',\n  largeJustify: 'Text--largeJustify',\n\n  xlargeLeft: 'Text--xlargeLeft',\n  xlargeRight: 'Text--xlargeRight',\n  xlargeCenter: 'Text--xlargeCenter',\n  xlargeJustify: 'Text--xlargeJustify',\n\n  xxlargeLeft: 'Text--xxlargeLeft',\n  xxlargeRight: 'Text--xxlargeRight',\n  xxlargeCenter: 'Text--xxlargeCenter',\n  xxlargeJustify: 'Text--xxlargeJustify',\n}\n\nconst PROP_TYPES = {\n  children: PropTypes.element,\n}\n\nObject.keys(CLASS_NAMES).forEach((key) => (PROP_TYPES[key] = PropTypes.bool))\n\nexport default class TextAlign extends Component {\n  static propTypes = {\n    children: PropTypes.element,\n  }\n\n  render() {\n    const classNamesList = [this.props.children.className]\n\n    Object.keys(this.props).forEach((propName) => {\n      const className = CLASS_NAMES[propName]\n\n      if (className) {\n        classNamesList.push(className)\n      }\n    })\n    return cloneElement(this.props.children, {\n      className: classNames(classNamesList),\n    })\n  }\n}\n"]}