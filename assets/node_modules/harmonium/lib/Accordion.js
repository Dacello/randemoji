'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _lodash = require('lodash');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// Converts string or array of strings to string-to-bool object mapping
// "one" -> {one: true}
// ["one", "two"] -> {one: true, two: true}
/* eslint complexity: [2, 4] */
function activeToObject(active) {
  var obj = {};

  if (active === null) {
    return obj;
  }
  if (active instanceof Array) {
    active.forEach(function (name) {
      return obj[name] = true;
    });
  } else if ((typeof active === 'undefined' ? 'undefined' : _typeof(active)) === 'object') {
    obj = active;
  } else {
    obj[active] = true;
  }
  return obj;
}

var AccordionItem = function (_Component) {
  _inherits(AccordionItem, _Component);

  function AccordionItem() {
    _classCallCheck(this, AccordionItem);

    return _possibleConstructorReturn(this, (AccordionItem.__proto__ || Object.getPrototypeOf(AccordionItem)).apply(this, arguments));
  }

  _createClass(AccordionItem, [{
    key: 'render',

    /* eslint complexity: [2, 5] */
    value: function render() {
      var _props = this.props,
          children = _props.children,
          className = _props.className,
          onClick = _props.onClick,
          href = _props.href,
          title = _props.title,
          active = _props.active,
          renderHiddenPanes = _props.renderHiddenPanes,
          props = _objectWithoutProperties(_props, ['children', 'className', 'onClick', 'href', 'title', 'active', 'renderHiddenPanes']);

      var liClassName = (0, _classnames2.default)(className, 'rev-AccordionItem', {
        'rev-AccordionItem--selected': active
      });
      var aClassName = (0, _classnames2.default)('rev-AccordionItem-title', {
        'rev-AccordionItem-title--selected': active
      });
      var divClassName = (0, _classnames2.default)('rev-AccordionItem-content', {
        'rev-AccordionItem-content--selected': active
      });
      var liProps = (0, _lodash.omit)(props, ['contentKey', 'mappedActive']);

      if (!active && !renderHiddenPanes) {
        return _react2.default.createElement(
          'li',
          _extends({}, liProps, { className: liClassName }),
          _react2.default.createElement(
            'a',
            { className: aClassName, href: href || '#', onClick: onClick },
            title
          )
        );
      }

      var div = _react2.default.createElement(
        'div',
        { className: divClassName },
        children
      );

      return _react2.default.createElement(
        'li',
        _extends({}, liProps, { className: liClassName }),
        _react2.default.createElement(
          'a',
          { className: aClassName, href: href || '#', onClick: onClick },
          title
        ),
        div
      );
    }
  }]);

  return AccordionItem;
}(_react.Component);

AccordionItem.propTypes = {
  onClick: _propTypes2.default.func,
  href: _propTypes2.default.string,
  title: _propTypes2.default.string,
  active: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.array, _propTypes2.default.object]),
  renderHiddenPanes: _propTypes2.default.bool,
  contentKey: _propTypes2.default.number,
  className: _propTypes2.default.string,
  children: _propTypes2.default.node };

var Accordion = function (_Component2) {
  _inherits(Accordion, _Component2);

  function Accordion() {
    var _ref;

    var _temp, _this2, _ret;

    _classCallCheck(this, Accordion);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this2 = _possibleConstructorReturn(this, (_ref = Accordion.__proto__ || Object.getPrototypeOf(Accordion)).call.apply(_ref, [this].concat(args))), _this2), _this2.rewriteChild = function (child) {
      var _this2$props = _this2.props,
          active = _this2$props.active,
          renderHiddenPanes = _this2$props.renderHiddenPanes;

      var activeMap = activeToObject(active);
      var mappedActive = activeMap[child.props.contentKey] || false;

      return (0, _react.cloneElement)(child, { active: mappedActive, renderHiddenPanes: renderHiddenPanes });
    }, _temp), _possibleConstructorReturn(_this2, _ret);
  }

  _createClass(Accordion, [{
    key: 'render',
    value: function render() {
      var _props2 = this.props,
          children = _props2.children,
          className = _props2.className,
          props = _objectWithoutProperties(_props2, ['children', 'className']);

      var ulClassName = (0, _classnames2.default)(className, 'rev-Accordion');
      var ulProps = (0, _lodash.omit)(props, ['active', 'defaultActive', 'multi']);

      return _react2.default.createElement(
        'ul',
        _extends({}, ulProps, { className: ulClassName }),
        _react.Children.map(children, this.rewriteChild)
      );
    }
  }]);

  return Accordion;
}(_react.Component);

Accordion.propTypes = {
  active: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.array, _propTypes2.default.object]),
  renderHiddenPanes: _propTypes2.default.bool,
  className: _propTypes2.default.string,
  children: _propTypes2.default.node
};
Accordion.defaultProps = {
  active: null
};
exports.default = Accordion;


Accordion.Item = AccordionItem;

var StatefulAccordion = function (_Component3) {
  _inherits(StatefulAccordion, _Component3);

  function StatefulAccordion(props) {
    _classCallCheck(this, StatefulAccordion);

    var _this3 = _possibleConstructorReturn(this, (StatefulAccordion.__proto__ || Object.getPrototypeOf(StatefulAccordion)).call(this, props));

    _this3.setExclusivelyActive = function (contentKey) {
      if (_this3.state.active[contentKey]) {
        return;
      }
      var active = {};

      active[contentKey] = true;
      _this3.setState({ active: active });
    };

    _this3.toggleActiveStatus = function (contentKey) {
      var currentStatus = _this3.state.active[contentKey];
      var active = _extends({}, _this3.state.active);

      active[contentKey] = !currentStatus;
      _this3.setState({ active: active });
    };

    _this3.rewriteChild = function (child) {
      var multi = _this3.props.multi;
      var _child$props = child.props,
          contentKey = _child$props.contentKey,
          onClick = _child$props.onClick;

      var newOnClick = function newOnClick(e) {
        for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
          args[_key2 - 1] = arguments[_key2];
        }

        e.preventDefault();
        _this3[multi ? 'toggleActiveStatus' : 'setExclusivelyActive'](contentKey);
        if (onClick) {
          return onClick.apply(undefined, [e].concat(args));
        }
        return null;
      };

      return (0, _react.cloneElement)(child, { onClick: newOnClick });
    };

    _this3.state = {
      active: activeToObject(props.defaultActive)
    };
    return _this3;
  }

  _createClass(StatefulAccordion, [{
    key: 'render',
    value: function render() {
      var _props3 = this.props,
          children = _props3.children,
          props = _objectWithoutProperties(_props3, ['children']);

      return _react2.default.createElement(
        Accordion,
        _extends({}, props, { active: this.state.active }),
        _react.Children.map(children, this.rewriteChild)
      );
    }
  }]);

  return StatefulAccordion;
}(_react.Component);

StatefulAccordion.propTypes = {
  defaultActive: _propTypes2.default.number,
  multi: _propTypes2.default.bool,
  children: _propTypes2.default.node
};


Accordion.Stateful = StatefulAccordion;
//# sourceMappingURL=Accordion.js.map