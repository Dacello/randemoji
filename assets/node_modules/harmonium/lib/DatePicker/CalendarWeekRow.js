'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _luxon = require('luxon');

var _react = require('react');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _createElementWithOverride = require('../Utilities/createElementWithOverride');

var _createElementWithOverride2 = _interopRequireDefault(_createElementWithOverride);

var _CalendarDay = require('./CalendarDay');

var _CalendarDay2 = _interopRequireDefault(_CalendarDay);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /** @jsx createElement */


/**
 * Component representing one week of the calendar. It starts at props.firstDay
 * and loops through the seven days of the week, creating seven `CalendarDay`s.
 */
var CalendarWeekRow = function (_Component) {
  _inherits(CalendarWeekRow, _Component);

  function CalendarWeekRow() {
    _classCallCheck(this, CalendarWeekRow);

    return _possibleConstructorReturn(this, (CalendarWeekRow.__proto__ || Object.getPrototypeOf(CalendarWeekRow)).apply(this, arguments));
  }

  _createClass(CalendarWeekRow, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          currentMonth = _props.currentMonth,
          dateChanger = _props.dateChanger,
          day = _props.day,
          highlights = _props.highlights,
          isSelectable = _props.isSelectable,
          overrides = _props.overrides,
          selectedDate = _props.selectedDate,
          firstDay = _props.firstDay,
          rowProps = _objectWithoutProperties(_props, ['currentMonth', 'dateChanger', 'day', 'highlights', 'isSelectable', 'overrides', 'selectedDate', 'firstDay']);

      var createElement = _createElementWithOverride2.default.bind(this, overrides);

      return createElement(
        'tr',
        rowProps,
        [0, 1, 2, 3, 4, 5, 6].map(function (i) {
          var date = firstDay.plus(_luxon.Duration.fromObject({ days: i }));

          return createElement(_CalendarDay2.default, _extends({
            currentMonth: currentMonth,
            dateChanger: dateChanger,
            highlights: highlights,
            isSelectable: isSelectable,
            overrides: overrides,
            selectedDate: selectedDate
          }, day, {
            date: date,
            key: date.toISO()
          }));
        })
      );
    }
  }]);

  return CalendarWeekRow;
}(_react.Component);

CalendarWeekRow.propTypes = {
  currentMonth: _propTypes2.default.string,
  dateChanger: _propTypes2.default.func,
  highlights: _propTypes2.default.oneOfType([_propTypes2.default.array, _propTypes2.default.func, _propTypes2.default.object]),
  isSelectable: _propTypes2.default.func,
  overrides: _propTypes2.default.object,
  selectedDate: _propTypes2.default.any,
  day: _propTypes2.default.any,
  week: _propTypes2.default.any,
  firstDay: _propTypes2.default.any
};
exports.default = CalendarWeekRow;
//# sourceMappingURL=CalendarWeekRow.js.map