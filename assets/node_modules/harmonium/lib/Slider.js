'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Slider = function (_Component) {
  _inherits(Slider, _Component);

  function Slider(props) {
    _classCallCheck(this, Slider);

    var _this = _possibleConstructorReturn(this, (Slider.__proto__ || Object.getPrototypeOf(Slider)).call(this, props));

    _this.sliderChange = function (e) {
      _this.setState({ value: e.target.value });
    };

    _this.inputChange = function (e) {
      var _this$props = _this.props,
          min = _this$props.min,
          max = _this$props.max;
      var value = e.target.value;


      if (value > max) {
        _this.setState({ value: max });
      } else if (value < min) {
        _this.setState({ value: min });
      } else {
        _this.setState({ value: value });
      }
    };

    _this.state = {
      value: props.initialValue
    };
    return _this;
  }

  _createClass(Slider, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          name = _props.name,
          rangeInputProps = _objectWithoutProperties(_props, ['name']);

      var value = this.state.value;


      return _react2.default.createElement(
        'div',
        { className: 'rev-Slider' },
        _react2.default.createElement(
          'div',
          { className: 'rev-Slider-range-container' },
          _react2.default.createElement('input', _extends({
            className: 'rev-Slider-range'
          }, rangeInputProps, {
            type: 'range',
            onChange: this.sliderChange,
            value: value
          }))
        ),
        _react2.default.createElement('input', {
          type: 'text',
          className: 'rev-Slider-input',
          onChange: this.inputChange,
          name: name,
          value: value
        })
      );
    }
  }]);

  return Slider;
}(_react.Component);

Slider.propTypes = {
  min: _propTypes2.default.number,
  max: _propTypes2.default.number,
  step: _propTypes2.default.number,
  initialValue: _propTypes2.default.number,
  name: _propTypes2.default.string
};

exports.default = Slider;
//# sourceMappingURL=Slider.js.map