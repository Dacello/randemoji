'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _enzyme = require('enzyme');

var _Col = require('./Col');

var _Col2 = _interopRequireDefault(_Col);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

describe('Col', function () {
  it('should render without throwing', function () {
    (0, _enzyme.shallow)(_react2.default.createElement(_Col2.default, null));
  });

  it('should add className to child', function () {
    var inherentClassName = 'rev-Col';
    var testClassName = '__TEST__';

    var childClassName = (0, _enzyme.shallow)(_react2.default.createElement(_Col2.default, { className: testClassName })).first().prop('className');

    expect(childClassName).to.contain(inherentClassName);
    expect(childClassName).to.contain(testClassName);
  });

  it('handles column number props', function () {
    var propToClass = {
      small: 'rev-Col--small',
      medium: 'rev-Col--medium',
      large: 'rev-Col--large',
      smallOffset: 'rev-Col--smallOffset',
      mediumOffset: ' rev-Col--mediumOffset',
      largeOffset: 'rev-Col--largeOffset',
      smallPush: 'rev-Col--smallPush',
      mediumPush: 'rev-Col--mediumPush',
      largePush: 'rev-Col--largePush',
      smallPull: 'rev-Col--smallPull',
      mediumPull: 'rev-Col--mediumPull',
      largePull: 'rev-Col--largePull',
      smallOrder: 'rev-Col--smallOrder',
      mediumOrder: 'rev-Col--mediumOrder',
      largeOrder: 'rev-Col--largeOrder'
    };

    for (var key in propToClass) {
      if (Object.prototype.hasOwnProperty.call(propToClass, key)) {
        var value = propToClass[key];
        var props = _defineProperty({}, key, 1);
        var col = (0, _enzyme.shallow)(_react2.default.createElement(_Col2.default, props));

        expect(col.prop('className')).to.contain(value);
      }
    }
  });

  it('handles boolean props', function () {
    var col = (0, _enzyme.shallow)(_react2.default.createElement(_Col2.default, { smallCentered: true }));

    expect(col.prop('className')).to.contain('rev-Col--smallCentered');
  });
});
//# sourceMappingURL=Col.test.js.map