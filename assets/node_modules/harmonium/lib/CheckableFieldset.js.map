{"version":3,"sources":["../src/CheckableFieldset.js"],"names":["CheckableFieldset","props","label","className","children","help","error","fieldsetClassName","legendClassName","Component","propTypes","PropTypes","string","oneOfType","bool","node"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEqBA,iB;;;;;;;;;;;6BASV;AAAA,mBACqD,KAAKC,KAD1D;AAAA,UACAC,KADA,UACAA,KADA;AAAA,UACOC,SADP,UACOA,SADP;AAAA,UACkBC,QADlB,UACkBA,QADlB;AAAA,UAC4BC,IAD5B,UAC4BA,IAD5B;AAAA,UACkCC,KADlC,UACkCA,KADlC;AAAA,UAC4CL,KAD5C;;AAGP,UAAMM,oBAAoB,0BACxBJ,SADwB,EAExB,UAFwB,EAGxB,uBAHwB,EAIxB;AACE,+BAAuB,CAAC,CAACG;AAD3B,OAJwB,CAA1B;;AASA,UAAME,kBAAkB,0BAAW;AACjC,4BAAoB,CAAC,CAACF;AADW,OAAX,CAAxB;;AAIA,aACE;AAAA;AAAA;AACE;AAAA;AAAA,uBAAcL,KAAd,IAAqB,WAAWM,iBAAhC;AACGL,kBAAQ;AAAA;AAAA,cAAQ,WAAWM,eAAnB;AAAqCN;AAArC,WAAR,GAA+D,IADlE;AAEGE,kBAFH;AAGE;AAAC,mCAAD;AAAA;AAAgBC;AAAhB,WAHF;AAIE;AAAC,iCAAD;AAAA;AAAcC;AAAd;AAJF;AADF,OADF;AAUD;;;;EAnC4CG,gB;;AAA1BT,iB,CACZU,S,GAAY;AACjBR,SAAOS,oBAAUC,MADA;AAEjBP,QAAMM,oBAAUC,MAFC;AAGjBN,SAAOK,oBAAUE,SAAV,CAAoB,CAACF,oBAAUG,IAAX,EAAiBH,oBAAUC,MAA3B,CAApB,CAHU;AAIjBT,aAAWQ,oBAAUC,MAJJ;AAKjBR,YAAUO,oBAAUI;AALH,C;kBADAf,iB","file":"CheckableFieldset.js","sourcesContent":["import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport InputHelpText from './InputHelpText'\nimport InputErrors from './InputErrors'\n\nexport default class CheckableFieldset extends Component {\n  static propTypes = {\n    label: PropTypes.string,\n    help: PropTypes.string,\n    error: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n    className: PropTypes.string,\n    children: PropTypes.node,\n  }\n\n  render() {\n    const {label, className, children, help, error, ...props} = this.props\n\n    const fieldsetClassName = classNames(\n      className,\n      'fieldset',\n      'rev-CheckableFieldset',\n      {\n        'is-invalid-fieldset': !!error,\n      }\n    )\n\n    const legendClassName = classNames({\n      'is-invalid-label': !!error,\n    })\n\n    return (\n      <div>\n        <fieldset {...props} className={fieldsetClassName}>\n          {label ? <legend className={legendClassName}>{label}</legend> : null}\n          {children}\n          <InputHelpText>{help}</InputHelpText>\n          <InputErrors>{error}</InputErrors>\n        </fieldset>\n      </div>\n    )\n  }\n}\n"]}