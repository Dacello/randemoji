{"version":3,"sources":["../src/DataGrid.js"],"names":["BOOL_PROPS_TO_CLASS_NAMES","striped","horizontalScroll","verticalScroll","stacked","stackForSmall","stackForMedium","stackForLarge","BOOL_PROPS","Object","keys","DataGrid","props","className","children","propClassNames","forEach","name","push","newClassName","React","Component","propTypes","PropTypes","string","node","DataGridHeaderRow","HeaderRow","DataGridHeaderCol","HeaderCol","DataGridHeaderRowStacked","HeaderRowStacked","DataGridHeaderInline","HeaderInline","DataGridBody","Body","DataGridRow","Row","DataGridCol","Col"],"mappings":"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","file":"DataGrid.js","sourcesContent":["import React, {Component} from 'react'\nimport {Row, Col} from './grid'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nconst BOOL_PROPS_TO_CLASS_NAMES = {\n  striped: 'rev-DataGrid--striped',\n  horizontalScroll: 'rev-DataGrid--horizontalScroll',\n  verticalScroll: 'rev-DataGrid--verticalScroll',\n  stacked: 'rev-DataGrid--stacked',\n  stackForSmall: 'rev-DataGrid--stackForSmall',\n  stackForMedium: 'rev-DataGrid--stackForMedium',\n  stackForLarge: 'rev-DataGrid--stackForLarge',\n}\nconst BOOL_PROPS = Object.keys(BOOL_PROPS_TO_CLASS_NAMES)\n\nexport default class DataGrid extends React.Component {\n  static propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.node,\n  }\n\n  render() {\n    const {className, children, ...props} = this.props\n    const propClassNames = []\n\n    BOOL_PROPS.forEach((name) => {\n      if (props[name]) {\n        propClassNames.push(BOOL_PROPS_TO_CLASS_NAMES[name])\n      }\n      delete props[name]\n    })\n\n    const newClassName = classNames(className, 'rev-DataGrid', propClassNames)\n\n    return (\n      <div {...props} className={newClassName}>\n        {children}\n      </div>\n    )\n  }\n}\n\nclass DataGridHeaderRow extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.node,\n  }\n\n  render() {\n    const {className, children, ...props} = this.props\n\n    return (\n      <Row {...props} className={`rev-DataGrid-headerRow ${className}`}>\n        {children}\n      </Row>\n    )\n  }\n}\nDataGrid.HeaderRow = DataGridHeaderRow\n\nclass DataGridHeaderCol extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.node,\n  }\n\n  render() {\n    const {className, children, ...props} = this.props\n\n    return (\n      <Col {...props} className={`rev-DataGrid-headerCol ${className}`}>\n        {children}\n      </Col>\n    )\n  }\n}\nDataGrid.HeaderCol = DataGridHeaderCol\n\nclass DataGridHeaderRowStacked extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.node,\n  }\n\n  render() {\n    const {className, children, ...props} = this.props\n\n    return (\n      <Row {...props} className={`rev-DataGrid-headerRow rev-DataGrid-headerRow--stacked ${className}`}>\n        {children}\n      </Row>\n    )\n  }\n}\nDataGrid.HeaderRowStacked = DataGridHeaderRowStacked\n\nclass DataGridHeaderInline extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.node,\n  }\n\n  render() {\n    const {className, children, ...props} = this.props\n\n    return (\n      <span {...props} className={`rev-DataGrid-header--inline ${className}`}>\n        {children}\n      </span>\n    )\n  }\n}\nDataGrid.HeaderInline = DataGridHeaderInline\n\nclass DataGridBody extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.node,\n  }\n\n  render() {\n    const {className, children} = this.props\n\n    return (\n      <div className={`rev-DataGrid-body ${className}`}>\n        {children}\n      </div>\n    )\n  }\n}\nDataGrid.Body = DataGridBody\n\nclass DataGridRow extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.node,\n  }\n\n  render() {\n    const {className, children} = this.props\n\n    return (\n      <Row className={`rev-DataGrid-row ${className}`}>\n        {children}\n      </Row>\n    )\n  }\n}\nDataGrid.Row = DataGridRow\n\nclass DataGridCol extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.node,\n  }\n\n  render() {\n    const {className, children, ...props} = this.props\n\n    return (\n      <Col {...props} className={`rev-DataGrid-col ${className}`}>\n        {children}\n      </Col>\n    )\n  }\n}\nDataGrid.Col = DataGridCol\n"]}