{"version":3,"sources":["../src/Loader.js"],"names":["PROP_TYPES","borderWidth","PropTypes","string","children","element","color","duration","huge","bool","large","medium","secondaryColor","size","small","sizeRelatedProps","inc","num","Loader","attrs","obj","acc","curr","props","sum","sumPropsInObj","Error","classes","concat","styles","animationDuration","borderColor","borderTopColor","height","width","overrides","style","ensureNoConflicts","resolveClassNames","resolveStyles","Component"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;AAEA;AACA,IAAMA,aAAa;AACjBC,eAAaC,oBAAUC,MADN;AAEjBC,YAAUF,oBAAUG,OAFH;AAGjBC,SAAOJ,oBAAUC,MAHA;AAIjBI,YAAUL,oBAAUC,MAJH;AAKjBK,QAAMN,oBAAUO,IALC;AAMjBC,SAAOR,oBAAUO,IANA;AAOjBE,UAAQT,oBAAUO,IAPD;AAQjBG,kBAAgBV,oBAAUC,MART;AASjBU,QAAMX,oBAAUC,MATC;AAUjBW,SAAOZ,oBAAUO;;AAGnB;;;;AAbmB,CAAnB,CAiBA,IAAMM,mBAAmB,CAAC,MAAD,EAAS,OAAT,EAAkB,QAAlB,EAA4B,MAA5B,EAAoC,OAApC,CAAzB;;AAEA;;;;AAIA,SAASC,GAAT,GAAsB;AAAA,MAATC,GAAS,uEAAH,CAAG;;AACpB,SAAOA,MAAM,CAAb;AACD;;IAEoBC,M;;;;;;;;;;;;AACnB;;;;;oCAKoC;AAAA,UAAtBC,KAAsB,uEAAd,EAAc;AAAA,UAAVC,GAAU,uEAAJ,EAAI;;AAClC,aAAO,oBAAOD,KAAP,EAAc,UAACE,GAAD,EAAMC,IAAN;AAAA,eAAgB,iBAAIF,GAAJ,EAASE,IAAT,IAAiBN,IAAIK,GAAJ,CAAjB,GAA4BA,GAA5C;AAAA,OAAd,EAAgE,CAAhE,CAAP;AACD;;AAED;;;;;;;;wCAK8B;AAAA,UAAZE,KAAY,uEAAJ,EAAI;;AAC5B,UAAMC,MAAM,KAAKC,aAAL,CAAmBV,gBAAnB,EAAqCQ,KAArC,CAAZ;;AAEA,UAAI,gBAAGC,GAAH,EAAQ,CAAR,CAAJ,EAAgB;AACd,cAAME,wMAAN;AAKD;AACF;;AAED;;;;;;;;wCAK8B;AAAA,UAAZH,KAAY,uEAAJ,EAAI;;AAC5B;AACA,UAAMI,UAAU,qBAAQZ,gBAAR,EAA0B,MAA1B,CAAhB;;AAEA,aAAO,oBACLY,OADK,EAEL,UAACN,GAAD,EAAMC,IAAN;AAAA,eAAgBC,MAAMD,IAAN,IAAcD,IAAIO,MAAJ,kBAA0BN,IAA1B,CAAd,GAAkDD,GAAlE;AAAA,OAFK,EAGL,EAHK,CAAP;AAKD;;AAED;;;;;;;;oCAK0B;AAAA,UAAZE,KAAY,uEAAJ,EAAI;;AACxB,UAAMM,SAAS;AACbC,2BAAmBP,MAAMhB,QADZ;AAEbwB,qBAAaR,MAAMX,cAFN;AAGboB,wBAAgBT,MAAMjB,KAHT;AAIbL,qBAAasB,MAAMtB,WAJN;AAKbgC,gBAAQV,MAAMV,IALD;AAMbqB,eAAOX,MAAMV;AANA,OAAf;AAQA,UAAMsB,YAAYZ,MAAMa,KAAN,IAAe,EAAjC;;AAEA,0BAAWP,MAAX,EAAsBM,SAAtB;AACD;;;6BAEQ;AACP,UAAMZ,QAAQ,kBAAK,KAAKA,KAAV,EAAiB,WAAjB,CAAd;;AAEA,WAAKc,iBAAL,CAAuBd,KAAvB;;AAEA,UAAMI,UAAU,KAAKW,iBAAL,CAAuBf,KAAvB,CAAhB;AACA,UAAMM,SAAS,KAAKU,aAAL,CAAmBhB,KAAnB,CAAf;;AAEA,aACE;AAAA;AAAA,UAAK,2BAAyBI,OAA9B,EAAyC,OAAOE,MAAhD;AACGN,cAAMnB;AADT,OADF;AAKD;;;;EA3EiCoC,gB;;kBAAftB,M","file":"Loader.js","sourcesContent":["import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport {omit, gt, has, reduce, without} from 'lodash'\n\n/* eslint-disable no-unused-vars */\nconst PROP_TYPES = {\n  borderWidth: PropTypes.string,\n  children: PropTypes.element,\n  color: PropTypes.string,\n  duration: PropTypes.string,\n  huge: PropTypes.bool,\n  large: PropTypes.bool,\n  medium: PropTypes.bool,\n  secondaryColor: PropTypes.string,\n  size: PropTypes.string,\n  small: PropTypes.bool,\n}\n\n/*\n * Size-related props.\n * Itemizes style configurations for the various size props that may be passed.\n **/\nconst sizeRelatedProps = ['huge', 'large', 'medium', 'size', 'small']\n\n/*\n * Increment.\n * Provided a number, returns its value, incremented by one.\n **/\nfunction inc(num = 0) {\n  return num + 1\n}\n\nexport default class Loader extends Component {\n  /*\n   * Sum properties in object.\n   * Provided a list of attributes, and provided an object, returns an integer\n   * representing the total number of attributes encompassed by the object.\n   **/\n  sumPropsInObj(attrs = [], obj = {}) {\n    return reduce(attrs, (acc, curr) => (has(obj, curr) ? inc(acc) : acc), 0)\n  }\n\n  /*\n   * Ensure no prop conflicts.\n   * Verifies that developer has not passed any conflicting props. Provided so,\n   * throws an error.\n   **/\n  ensureNoConflicts(props = {}) {\n    const sum = this.sumPropsInObj(sizeRelatedProps, props)\n\n    if (gt(sum, 1)) {\n      throw Error(\n        `You have specified more than one of the following size-related props:\n        small, medium, large, huge, size. Only one of these props may be\n        specified per each component instance.`\n      )\n    }\n  }\n\n  /*\n   * Resolve class name.\n   * Provided `this.props`, return a `className` that reflects only up to one of\n   * our size-related props, such as `small`, `medium`, `large`, or `huge`.\n   **/\n  resolveClassNames(props = {}) {\n    // Allocate all size-related props except `size`.\n    const classes = without(sizeRelatedProps, 'size')\n\n    return reduce(\n      classes,\n      (acc, curr) => (props[curr] ? acc.concat(`rev-Loader--${curr}`) : acc),\n      ''\n    )\n  }\n\n  /*\n   * Resolve styles.\n   * Provided `this.props`, return a consolidated `styles` object, using\n   * `this.props.style` as overrides.\n   **/\n  resolveStyles(props = {}) {\n    const styles = {\n      animationDuration: props.duration,\n      borderColor: props.secondaryColor,\n      borderTopColor: props.color,\n      borderWidth: props.borderWidth,\n      height: props.size,\n      width: props.size,\n    }\n    const overrides = props.style || {}\n\n    return {...styles, ...overrides}\n  }\n\n  render() {\n    const props = omit(this.props, 'className')\n\n    this.ensureNoConflicts(props)\n\n    const classes = this.resolveClassNames(props)\n    const styles = this.resolveStyles(props)\n\n    return (\n      <div className={`rev-Loader ${classes}`} style={styles}>\n        {props.children}\n      </div>\n    )\n  }\n}\n"]}