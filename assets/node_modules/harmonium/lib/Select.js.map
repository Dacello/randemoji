{"version":3,"sources":["../src/Select.js"],"names":["Select","props","children","options","className","error","inputClassName","map","key","label","value","Component","propTypes","PropTypes","array","oneOfType","bool","string","node","SelectStack","help","labelClassName","Stack"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEqBA,M;;;;;;;;;;;6BAgBV;AAAA,mBACiD,KAAKC,KADtD;AAAA,UACAC,QADA,UACAA,QADA;AAAA,UACUC,OADV,UACUA,OADV;AAAA,UACmBC,SADnB,UACmBA,SADnB;AAAA,UAC8BC,KAD9B,UAC8BA,KAD9B;AAAA,UACwCJ,KADxC;;AAGP,UAAMK,iBAAiB,0BAAWF,SAAX,EAAsB,YAAtB,EAAoC;AACzD,4BAAoB,CAAC,CAACC,KADmC;AAEzD,sBAAc,CAAC,CAACA;AAFyC,OAApC,CAAvB;;AAKA,aACE;AAAA;AAAA,mBAAQ,WAAWC,cAAnB,IAAuCL,KAAvC;AACGC,gBADH;AAEGC,kBAAUH,OAAOG,OAAP,CAAeA,OAAf,CAAV,GAAoC;AAFvC,OADF;AAMD;;;4BAtBcA,Q,EAAS;AACtB,aAAOA,SAAQI,GAAR,CAAY;AAAA,YAAEC,GAAF,QAAEA,GAAF;AAAA,YAAOC,KAAP,QAAOA,KAAP;AAAA,YAAcC,KAAd,QAAcA,KAAd;AAAA,YAAwBT,KAAxB;;AAAA,eACjB;AAAA;AAAA,qBAAQ,KAAKO,OAAOE,KAApB,EAA2B,OAAOA,KAAlC,IAA6CT,KAA7C;AACGQ;AADH,SADiB;AAAA,OAAZ,CAAP;AAKD;;;;EAdiCE,gB;;AAAfX,M,CACZY,S,GAAY;AACjBT,WAASU,oBAAUC,KADF;AAEjBT,SAAOQ,oBAAUE,SAAV,CAAoB,CAACF,oBAAUG,IAAX,EAAiBH,oBAAUI,MAA3B,CAApB,CAFU;AAGjBb,aAAWS,oBAAUI,MAHJ;AAIjBf,YAAUW,oBAAUK;AAJH,C;kBADAlB,M;;IAiCfmB,W;;;;;;;;;;;6BAQK;AAAA,oBACqD,KAAKlB,KAD1D;AAAA,UACAC,QADA,WACAA,QADA;AAAA,UACUO,KADV,WACUA,KADV;AAAA,UACiBL,SADjB,WACiBA,SADjB;AAAA,UAC4BgB,IAD5B,WAC4BA,IAD5B;AAAA,UACkCf,KADlC,WACkCA,KADlC;AAAA,UAC4CJ,KAD5C;;AAGP,UAAMoB,iBAAiB,0BAAWjB,SAAX,EAAsB,iBAAtB,CAAvB;;AAEA,aACE;AAAC,4BAAD;AAAA,UAAY,WAAWiB,cAAvB,EAAuC,OAAOhB,KAA9C;AACGI,aADH;AAEE;AAAC,gBAAD;AAAA,uBAAYR,KAAZ,IAAmB,OAAOI,KAA1B;AACGH;AADH,SAFF;AAKE;AAAC,iCAAD;AAAA;AAAgBkB;AAAhB,SALF;AAME;AAAC,+BAAD;AAAA;AAAcf;AAAd;AANF,OADF;AAUD;;;;EAvBuBM,gB;;AAApBQ,W,CACGP,S,GAAY;AACjBH,SAAOI,oBAAUI,MADA;AAEjBG,QAAMP,oBAAUI,MAFC;AAGjBZ,SAAOQ,oBAAUE,SAAV,CAAoB,CAACF,oBAAUG,IAAX,EAAiBH,oBAAUI,MAA3B,CAApB,CAHU;AAIjBb,aAAWS,oBAAUI,MAJJ;AAKjBf,YAAUW,oBAAUK;AALH,C;;AAwBrBlB,OAAOsB,KAAP,GAAeH,WAAf","file":"Select.js","sourcesContent":["import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport InputLabel from './InputLabel'\nimport InputHelpText from './InputHelpText'\nimport InputErrors from './InputErrors'\n\nexport default class Select extends Component {\n  static propTypes = {\n    options: PropTypes.array,\n    error: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n    className: PropTypes.string,\n    children: PropTypes.node,\n  }\n\n  static options(options) {\n    return options.map(({key, label, value, ...props}) => (\n      <option key={key || value} value={value} {...props}>\n        {label}\n      </option>\n    ))\n  }\n\n  render() {\n    const {children, options, className, error, ...props} = this.props\n\n    const inputClassName = classNames(className, 'rev-Select', {\n      'is-invalid-input': !!error,\n      'is-invalid': !!error,\n    })\n\n    return (\n      <select className={inputClassName} {...props}>\n        {children}\n        {options ? Select.options(options) : null}\n      </select>\n    )\n  }\n}\n\nclass SelectStack extends Component {\n  static propTypes = {\n    label: PropTypes.string,\n    help: PropTypes.string,\n    error: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n    className: PropTypes.string,\n    children: PropTypes.node,\n  }\n  render() {\n    const {children, label, className, help, error, ...props} = this.props\n\n    const labelClassName = classNames(className, 'rev-SelectStack')\n\n    return (\n      <InputLabel className={labelClassName} error={error}>\n        {label}\n        <Select {...props} error={error}>\n          {children}\n        </Select>\n        <InputHelpText>{help}</InputHelpText>\n        <InputErrors>{error}</InputErrors>\n      </InputLabel>\n    )\n  }\n}\nSelect.Stack = SelectStack\n"]}